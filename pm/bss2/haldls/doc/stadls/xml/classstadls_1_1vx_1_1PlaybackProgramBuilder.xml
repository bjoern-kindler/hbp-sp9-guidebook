<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classstadls_1_1vx_1_1PlaybackProgramBuilder" kind="class" language="C++" prot="public">
    <compoundname>stadls::vx::PlaybackProgramBuilder</compoundname>
    <includes refid="playback__program__builder_8h" local="no">playback_program_builder.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa2d14f26c2c8befe1d95a3bea00e26f0" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; fisch::vx::PlaybackProgramBuilder &gt;</type>
        <definition>std::unique_ptr&lt;fisch::vx::PlaybackProgramBuilder&gt; stadls::vx::PlaybackProgramBuilder::m_builder_impl</definition>
        <argsstring></argsstring>
        <name>m_builder_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="189" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a49514ad0db88fd5fa382e81e4938df34" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="namespacestadls_1_1vx_1a911fb7d9ac9ae36c37c6764aca11cb72" kindref="member">ExecutorBackend</ref> &gt;</type>
        <definition>std::optional&lt;ExecutorBackend&gt; stadls::vx::PlaybackProgramBuilder::m_executable_restriction</definition>
        <argsstring></argsstring>
        <name>m_executable_restriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="191" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1add5661db9a7ab699c72f8c37c1b413d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::PlaybackProgramBuilder::PlaybackProgramBuilder</definition>
        <argsstring>(std::optional&lt; ExecutorBackend &gt; executable_restriction=std::nullopt) SYMBOL_VISIBLE</argsstring>
        <name>PlaybackProgramBuilder</name>
        <param>
          <type>std::optional&lt; <ref refid="namespacestadls_1_1vx_1a911fb7d9ac9ae36c37c6764aca11cb72" kindref="member">ExecutorBackend</ref> &gt;</type>
          <declname>executable_restriction</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Construct builder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executable_restriction</parametername>
</parameternamelist>
<parameterdescription>
<para>Restrict execution to given executor type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afa4553a2bcad0db5178b3413abf22193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::PlaybackProgramBuilder::PlaybackProgramBuilder</definition>
        <argsstring>(PlaybackProgramBuilder &amp;&amp;other) SYMBOL_VISIBLE</argsstring>
        <name>PlaybackProgramBuilder</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa8f3c161d29a87259de59704967fe6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::PlaybackProgramBuilder::PlaybackProgramBuilder</definition>
        <argsstring>(PlaybackProgramBuilder const &amp;)=delete</argsstring>
        <name>PlaybackProgramBuilder</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a81968b29864752dcdd20483203259ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::PlaybackProgramBuilder::~PlaybackProgramBuilder</definition>
        <argsstring>() SYMBOL_VISIBLE</argsstring>
        <name>~PlaybackProgramBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2cb6570f0bd1fbe6e54e4c2232902971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::copy_back</definition>
        <argsstring>(PlaybackProgramBuilder const &amp;other) SYMBOL_VISIBLE</argsstring>
        <name>copy_back</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy other <ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The copied-from builder is untouched during the process. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>On other builder not being write only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to copy to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4e159261af9f7905fa5ff5a3bc7b398b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::copy_back</definition>
        <argsstring>(fisch::vx::PlaybackProgramBuilder const &amp;other) SYMBOL_VISIBLE</argsstring>
        <name>copy_back</name>
        <param>
          <type>fisch::vx::PlaybackProgramBuilder const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy fisch <ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The copied-from builder is untouched during the process. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>On other builder not being write only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to copy to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae16debbcae4ef64a56cf02ced33f4e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram" kindref="compound">PlaybackProgram</ref></type>
        <definition>PlaybackProgram stadls::vx::PlaybackProgramBuilder::done</definition>
        <argsstring>() SYMBOL_VISIBLE</argsstring>
        <name>done</name>
        <briefdescription>
<para>Close <ref refid="classstadls_1_1vx_1_1PlaybackProgram" kindref="compound">PlaybackProgram</ref> build process and return executable program. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Executable <ref refid="classstadls_1_1vx_1_1PlaybackProgram" kindref="compound">PlaybackProgram</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa361aed6f8044f0b76ee65bb5f90c725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool stadls::vx::PlaybackProgramBuilder::empty</definition>
        <argsstring>() const SYMBOL_VISIBLE</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Get whether builder is empty, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>no instructions are embodied. <simplesect kind="return"><para>Boolean value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3fd357f4d78389e34f49fefe281bb972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::merge_back</definition>
        <argsstring>(PlaybackProgramBuilder &amp;other) SYMBOL_VISIBLE</argsstring>
        <name>merge_back</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge other <ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from builder is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4a17d73b2ee1916e9b5e9903f7e806e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::merge_back</definition>
        <argsstring>(fisch::vx::PlaybackProgramBuilder &amp;other) SYMBOL_VISIBLE</argsstring>
        <name>merge_back</name>
        <param>
          <type>fisch::vx::PlaybackProgramBuilder &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge fisch <ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from builder is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3fb31a9bc9bec7f57fb4d5f4fda57a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa5f2f05ab5462566f4c27d623851ba65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5141f684c4565e616b42d3108a6a064d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterRead &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a020ffaae6c53f6ce3a1d04e3fcf75768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterRead &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad6f84253bca74d5ba9ffcf4800893550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1babdc12443a22aa312a7ae563c95e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a85c7bed528c9ba7e7db4f5ea34274d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::HicannARQStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a554f931f341502449659d7391d8d57dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::HicannARQStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a46009e5a38e7ca2920d3484949630da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d7d05084fe6c37cfeba0e71cbbc628c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7e9af2bb7bbff4486387c214c343a857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryWord &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a24b75d4b64123834d06d2025d8a94247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryWord &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adb0c36a053097b803893c5452020d63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1c3b6922034f0783b84cfc96f6d2a104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae32647914d47d6886f53783247163abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemory &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a08a4e3b6af1c0899079f8181cb78a04a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemory &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a89500996f09e8f62bf8acca8ebcf902b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUControlRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae41dbff1dfef0f8ec251545567fed674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUControlRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a064499b8923f7f871eb747448dbfb7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUStatusRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af83c0b3051247fede88ba0b4b5721703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUStatusRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae465150dc8dc85125903adb2a7b48e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac60ee9b8dcb889b9c40dda6fdb1a6986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac7ff31c0343d3f60073cbfbfe7272ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::Timer &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a141e52e0ee21cf5c2160c4fa77f7d920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::Timer &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a190fd7e1b9d17a5e3a783a955093958a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGClockScaler &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad51c56fcd68a2dbbbab7c495170d2406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGClockScaler &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa82a2e51289bd9e086500a076ecf6db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGIdCode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab414c49c8c86099a8bc842e79a053c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGIdCode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aec88269b3b3e9d08fc8f900e95702edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetJTAGTap &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adbb7f830cf151871ab223d931e610f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetJTAGTap &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa62154933749776a460b8afd419377aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ShiftRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad9c6b51f2de6749cebb06e25f5505fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ShiftRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad2319979852cf95c40372b017b2cf5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACChannel &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a85bc719b898ad0aacf25f14888bb125f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACChannel &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a444bcab72af034061a2431e5308d4da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afdc7d290069c89044546e88e367a2145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a677f20eb5cb2fdc0d601a4a7de123493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemCell &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a083a75f4ba54704e400d76517b6b0029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemCell &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a540e34935f7d3ba48ebb76044413ba88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a13b114043af478454a4c1220b3d682b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4632e469d96e6606e7e701f016c02d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlockConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a134d1d01f054e4dd4e388b4b5b65b384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlockConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3e9a17a850a11742d5a03e2371017c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonNeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a04476da26c341ea2309263c47b7789ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonNeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad9dbfb000f7514f51115235aa0c06cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a63032197ab82b107b734c844e53b3011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4a3ec0075eb1e5f03703b4b1aa1c1a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1ccbad70d59570a89677a686cb43ddea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad51dd045d449e28321be4aa7a5c88672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseDriverConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a61f8a646b414aeb6ecfb04c0f99bc622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseDriverConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad92eb3cd6f14ce3b7f1c22edcf30f386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PADIEvent &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae57e5f217a0d9e0d9c8f5171f3f99370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PADIEvent &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa9d4e7e4abe9c3ce3a730dbc26ebf6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPADIBusConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a53dc1cbe8cda94d6bb51219c6f26981f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPADIBusConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8871aa05721c854c0e42ba96efc64c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSTPConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aaa33e7002ceff125ab3fa45659f30855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSTPConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a03f13f75c107386796b0f971090e86f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ADPLL &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a76da9028b550a515d23277a4165ca3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ADPLL &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aea15d52929fb3733fd0fd22e36813974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLClockOutputBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2da58080bbe3411ef9eeef1df9e25099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLClockOutputBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae0c040e649ce301a177466d13ce55470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0857a4191f1a49bfdf9824482a190e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3c09f1c7670dd8f889798b8d8521c174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a895d450168237ab557c9bddfbeea6483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8f770723b4764dffa811033773dc873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3c2d6ccc77ed3cb250d7364342a66056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a48f5ccf6f99ebc2f7df3bd75e72989bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3175d774ae22e8422952742d05584312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b42846920b5b9b0529ee9b7752b08d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a18aab145117e661e43f4d29b0de8241e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8e42b7c2d608dd51c461ff13fa91b869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad22c828eea78a05b910d4dcef8dc0673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa3a28440ce69586d2fe1eb13b5bdda3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af659b588f5c9f8bbd50b9fdd5dee5d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a34cf7df713ad85a28fac0ffe1f74213a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a373ac96a98c019a26043611f17ac3be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afda31af7055f2bb7172d33513fd68de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSyncBase &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab2b4efc7fff3bbcaf8d6d0aa5837bf4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSyncBase &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab43c5bb5fa02a8b2dd12668962df1487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSynramConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6f8cbcf4f76f385c2e7d67fca6e1951b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSynramConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5449db3cc0a92eda422a6bde5abcdee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acdcfe3fd46fa1b6c156f0e94869449a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac80a64247d55c1036b5bf41e35305d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCorrelationQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a908ad9e46e6def968489e362034aafc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCorrelationQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a456236492cdb43757fd56252ec458b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCurrentQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae3ddd030d563ad845a6d752af9d53266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCurrentQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a174227534f527fa1497c8f9af5ce0d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac507643305933fcca8027d4bcbdb5538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d2e6af9ec009906c04c18c22988a709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCChannelConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aacb63017ca7019403121376fd4ff866c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCChannelConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7d02568e07e52d637e53dff46f34f07f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCSampleQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa0ff014ac998bac6cd1d54ed5b203f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCSampleQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0937bc47b55ee74e19bdf6509dab73b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack1ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3bff995274add070d0abbb39f3a7178e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack1ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a855962c953f36aab21046dcd9b6d2be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack2ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a36a8aaa73b3f59b64cd0aa595c817fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack2ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8affa265013ce4973b74bd9fcf8577f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack3ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7578de2f0b41a484e9589d52cc9b18ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack3ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a178a6c5e15538294944507075fb184fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::FPGADeviceDNA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afa1fccde6028ed944340648e35a80beb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::FPGADeviceDNA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa5704f7131ae04daf7fdf87ed926169f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::EventRecordingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e7ad0b5e6a0528f12d3d56f8eabfbf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::EventRecordingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac8a464831d196a1923426cecd717e2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BackgroundSpikeSource &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a454bc787d1ed81062f4b971983fc355b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BackgroundSpikeSource &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa7167d02ce9676ee7e4a472237124a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5502d97d08a70925e51f149e6f404a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aefd66d8ac765f1a4d2d4b28f4a296748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarNode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6689043f0445ef246f1d583e1b63f4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarNode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab811bee2132a6b0e9faaf68af6b78610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarInputDropCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7c63e4c41eab47da7af02543f9d49be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarInputDropCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2b45fa83e9fc19b871656669943e4c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputEventCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3d4f6f857da21cdb4d37b4d5e7450eef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputEventCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a51460d73612200ddd2079f00d6a63c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseBiasSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae55d722f63a383086eaaa1d572ed0766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseBiasSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3e9c4a956f257a75dacb45413e394b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReferenceGeneratorConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0a0238d62044444a3c7517282de8aade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReferenceGeneratorConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a130c63459f2d7dd2e498cd274aaa997f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PadMultiplexerConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afb11b55b446b0165c5967fe5af7b8c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PadMultiplexerConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd501deddd5a66a8068abb93a55f8ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReadoutSourceSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b2f3e26f276d866015baf4f02fcb67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReadoutSourceSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afcf2e5fee69ea9df0cf14d38a71b333e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::MADCControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a30261899322d17c152f863dc55d3504c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::MADCControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1c39aed0c5ef4dfee0c49d7bb29db02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CorrelationReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa72bc83e140d98f1eabacfa6f620f7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CorrelationReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4075a0e2ed2309355363f4bdde3c8284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronResetQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1f3df52b2d99e0a49156538b47b808c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronResetQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a462509dda5373cf2de6b54e128cf84ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonCorrelationConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7f5323d29d66846028777e26dcc78cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonCorrelationConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7bd5834dfaea64a190330aed71f7939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BlockPostPulse &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a895ca016c8c96607e8680f64dc0da198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BlockPostPulse &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a119801d95573562be98ab7483fe96aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSync &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a18a3da5b3bae33f48dbe70f4c299702d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSync &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt; stadls::vx::PlaybackProgramBuilder::read</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af9c6d65e435dffa0d86f7f1f896cbb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::wait_until</definition>
        <argsstring>(typename haldls::vx::Timer::coordinate_type const &amp;coord, haldls::vx::Timer::Value time) SYMBOL_VISIBLE</argsstring>
        <name>wait_until</name>
        <param>
          <type>typename haldls::vx::Timer::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer::Value</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified timer has reached specified value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer coordinate for which to wait </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer value until which to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9ae0eb17919a40fc4a87bd669f6fdb09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::NeuronReset const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a65e9a0ae1f2cd411798e664d44034248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::NeuronReset const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1add42b9be3079c08863ff4a20b8e88d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9f9145c6865712413f0d8801fc213386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6dd2a4fd66c486a33c77800f069accb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad7a03518711bc779ea999540f1652557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab776467535da0ef0f7c23e51cce54c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::SpikeCounterRead const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6dbb0306f9ecf2adda9eb5dc1d3f12fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::SpikeCounterRead const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a81a78d8e811c8249c41e68b01370ae9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a79f74944ac098d756771f62472233474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae3c030762a488edb810d65dfdd45a74e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::SpikeCounterReset const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad152364cc0e051e8f6e7083004971eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::SpikeCounterReset const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a72a95ffb94816afed7a44538ae5e877b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac4c05046afe13cccc73542470d2ae8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a84bdd6e2eeea4fdefb4fb86de93bb281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::HicannARQStatus const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a78af26953ed1cf447d1300e884b467f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::HicannARQStatus const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3188f048cac1837a5588b1e1a0ce3984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::PhyStatus const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad19ce022762c90c9eebdc938b499e871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::PhyStatus const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1231be8bcca036da35ba60c4f51d4a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2cc87ca26f1ab565869f324b027139c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad1d10cd376783ef0207c6b58d5a81210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab63e7613bf3c9cb2fa47d7e0a7589c72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa7894dbcd4c3010e51cea6c4b276607a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::PPUMemoryWord const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e8efbd69294cfebbcd31ee68cf6c754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::PPUMemoryWord const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa610061b4c1b8a6dda58baddd9f18c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::PPUMemoryBlock const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a578572c55a7f52ec4716b578e94c8fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2fe223d983d5c06632d46ef5d50f2bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a01c53247191c11611978d9c8474a4f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::PPUMemoryBlock const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae9b6846564b13ddf647f0b2bc8aada76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae5f67383d89e88ce444c8fc5a6e1f610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a474fdeef27810e0338fc61ed6c3307e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::PPUMemory const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a740775577c2ef5d6a57429e4ae17511e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::PPUMemory const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a08505af3cc00365c83c62c19dea07579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d67fd58c2fcc017cfca20a4e2d04e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7b09b1e7f9f31f72cbb3a2999cb875bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::PPUControlRegister const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a90a585becb21bc2bdf477e20710668e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::PPUControlRegister const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a115c2c5a4c50bbaf1557475df34dec66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae5805f41129b42c5c7e43138d6033cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a99fcea2ee439712f51f5c47e856f9b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::PPUStatusRegister const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a56990da9202cbb7733ccbf05313a195a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::PPUStatusRegister const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a00e1667179aea46d121a4d03445c047f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abfdd5ffcaf10d35a0be80a50fe3023dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a326f45bce053e6c1e12ea1e1448aae70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::ResetChip const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7cf7431d8da98fbf0f57920ab45cd07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::ResetChip const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a85b1e67dd4e678ce75b928bc63679894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7637bebdc5a36a1b4632605c32741a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8fed58b1c50bf5b4956323523e9a789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Timer const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6738ea64825f0d3d8d8423afc1fcdad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Timer const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2211ea6bcd00ac64a011e1816222c64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7e88fdc93eb03ada64c74e2ffa75b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::JTAGClockScaler const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab9643e381bc0dc5ce626168e5d4e6cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::JTAGClockScaler const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9816d240894df6e553d1fdb7149c3554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afb20fc06fa6e37628a5644409f1c4b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a96927ccd97b90eb07e6726e38937795d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::JTAGIdCode const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2ae58e4a27734eb7e979b921e64454bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::JTAGIdCode const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a865735b6da230db9a049f54b428645b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad6206b550df9acb6baf4aa3bebcbaf8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a547ff8f452453731d75ed0f64d028d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::ResetJTAGTap const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a84e40d3ae887ca716a450e165359b339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::ResetJTAGTap const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5883eeace400d152a51dd5e22cda79dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7734278fe97af2c11eb60782884ee28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac5d7e75abd6b9ec06c05117a9b985f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aafd8b8a7a891d118abb20e69d81cd65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::ShiftRegister const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af87a7fc1ac689f95bbb4a1e6bb97e5b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::ShiftRegister const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7f36c19758c35ed58f2cb0805cb2e5d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d1425b5edcb360ada590f48ff88fd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac04db84ab3b0f251d564fd27961f5020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::DACChannel const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa9c4fd2e9dd2bc03f1fa14b06f04c9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::DACChannel const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a81b71271529094923546b013b83881cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a28df4fbfccb518eea0079f9391928abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a066de8c03c14d78cce78e530c091c811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::DACControl const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a012191fe3f3b0fbd8ef52acd3c08a377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::DACControl const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8aeaf6711be5e2cfc0325d104e923cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a59cd34a6c41a36b4061092c3f26b509c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa4014487830607ca378bb2196ecbebd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::CapMemCell const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a234ed458232c1511f1d84ecce15caa64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::CapMemCell const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9f850bfbf89296fa4270daaaeaa28a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6fded2607cc3639ce9904baa1f217447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a84414c26c1440fc92df1353b6c0f221a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::CapMemBlock const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad08e6cd422829b142afaaa874bc56e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::CapMemBlock const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afae4c988024af7c92ecd84feab71b554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::CapMemBlockConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abd292e1f0cacdd0fd418eb9e44777743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::CapMemBlockConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab4e173b9fdc53121e08e4f2e1aa24d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6afa5d9050d448aa19dc1e9afeefc5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a985daa44ab26f1a376c9a8ad52217c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a084b1c63748cf52aaabb10dd391c5a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a547abf4749bf6add624cab1053ce282e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::CommonNeuronBackendConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a27acea873b401b74b46c456c15a657cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::CommonNeuronBackendConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae03ead480277db4de6975e14f27e25ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a232cc9911afe6dfabf7f837ff5b9af9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a091d75477cbabbb7ebc6236e44f13a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::NeuronBackendConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a62e50682c6c0b6ccb6bcaff1e074ed0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::NeuronBackendConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab1ba2b47334faf2ff045b9d319ebab68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7ce7cc2df435ced0bfd1c9046b3f7b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9d1fb71481f9277a513311752a5ee8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::NeuronConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2c3856ac595ccba138601c9e3dc7392e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::NeuronConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a222d6970b2310265a435a5db33ce62db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::SynapseDriverConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a592faeeac5c5fb08e10e2fe6adf7307f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a01592591a6930e46b8116a89c53499c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7712da80b4d5bfcd3f14d73ee8078dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::SynapseDriverConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5b2bab661703b93f73a6ddb3f2808942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6969a2900f06ca6ced293e9437e8440a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4d52b0c6515fbbd86f01ce93b04a6daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::PADIEvent const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae54165225d787b67af2c3085ab83b12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::PADIEvent const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abcebc767136a7bcb68de27f2a66dc8f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad3c66e325ce2da1e16f08578cbf0037f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9e3bc8de7173107d44a4d6bde6e6ae58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::CommonPADIBusConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a86ed7d063eb3e46385b9f81e5e3a047a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::CommonPADIBusConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a53949ee6ade1daed533e25cb9ed14411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a589254dde13919f56024bbfaea87a442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abdd11c3c80b4692116fae8e64147c932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::CommonSTPConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a87b4e3896710cfed72a33f9d85c43e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::CommonSTPConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abb151534f761ff8dca8233900d8ae95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::ADPLL const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7aed0a1d35f66f7ead198e55d91ee7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adf5a4407cdde9903e24ecd8c81b8815c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab31a74232ca85de6005f749a8cd0815e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::ADPLL const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9ed5d52b3a7e8e4ecbdb38b675077769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac61e03693317697ccd843d5061e89ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6de595ad6b6234fbeeea83d3832ea359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::PLLClockOutputBlock const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af4cce603c4345d5ba5417be8bcf73f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::PLLClockOutputBlock const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a439fed924f3afcb0949556b594f05756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::PLLSelfTest const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a35dec79fa8cea36b6b06e17c0202744c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e315e2fac95bf195b806f752d53be94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2be1d961c4af800bbb5152a5e7f0e619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::PLLSelfTest const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8e23df76c2b3b7b7314eef817af6f9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::PLLSelfTestStatus const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a64bd9533bbff0b762842f09bbbb516df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6bb33e1c747da5b14ef78bc27f683ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7ec57b4984b3409d215d5ffb2f3cef74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::PLLSelfTestStatus const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b2c03e45be28b62d4f3f4e0c113545d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5e2665b1117edd9dc555b16e71ff280c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a42d1d0b362c073f2f61bffefd7bd262e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::PhyConfigFPGA const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae2bdef22c1607f8e7ae04f5429890330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::PhyConfigFPGA const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a065b13636d7de3fccf37849c7e14471b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::CommonPhyConfigFPGA const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acc223153b3ee287098d95a2a1d6c3098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adeb94759a63949099918e28b046a9e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ace02d3f207ba3b008f96500a3ac536c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::CommonPhyConfigFPGA const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e56b12c8f93fb79b6532aa792b805bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::PhyConfigChip const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9403fe83e16478766d4618659bb7097e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8cf986f72b9e4354f1e3f9b9db8d35f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afddbf6c290889c1e2abcd64994abf4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::PhyConfigChip const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7be0f913aa60e3b681ff41f0df36c457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0980f1c9716302f62093961541df4972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::CommonPhyConfigChip const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab79e81101573b086957c11130730afb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac0d5626893ddc9d2c2362d04ef3536f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::CommonPhyConfigChip const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a72793d69883d3e63a976dd3f8372155d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad2e96dce1cdf4c04722cea4346c8e8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac2e1b06d2f01f819a211fbac2884a66c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::PerfTest const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab227d3ce4eb48031e1944b38e2192cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::PerfTest const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aca7a1297ad6cbc399d1f3dda621834da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a43a7c78d59f44b5677b27ebafe240653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::PerfTestStatus const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acdcc3a160102ed1f1ee0c7b97fee42ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::PerfTestStatus const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acb1b50fb48ee9e3471ccd6ed32f4b566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9f2b7ff8b36459549e1c1f5d68723a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5f5eaa9654f6c4d970d5236ee5a03751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::SystimeSyncBase const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2d4b9db8f02980834e5b10ecaa2cd567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a555d439d1c0b5a350522a7f274ec3c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::SystimeSyncBase const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b019b3d08a8e8877f7f8baeb1666a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::CommonSynramConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac95e0b860780c6623e1f0f08885350c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::CommonSynramConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8c87563e96f28aa49a836ade23a9c549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aacb4278b66a62127e1280e6adda1f218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aae5935cbeaa53c2c2a66aeba8eb0aeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::SynapseQuad const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a732fce804559e154e3ad892bd813b06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1f813a18c0731191c3b1773ef8d9b43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::SynapseQuad const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6229fdeacb56dd7ddf8b9107c008b93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adbb5e8add8007c2bd394ff54a1898085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad1e3f32d77ae900bac31538f74a5feb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::ColumnCorrelationQuad const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1f83b54f580e57c63cdf6c0c75f97ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::ColumnCorrelationQuad const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a156bc03d80df7986a89d173f7068b4dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa7e6dbee4266fa07e693f88250f52e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1a4a3f5f678adf77bf9e5b7d07a6530f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::ColumnCurrentQuad const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abd13796f8b45b271c9f068441b0ac76e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a60a66a07443de6c03e56c0dff4d958c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::ColumnCurrentQuad const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa715484972de6e4463aa8f2cf4795abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::CADCConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5d8040af32db1b703649403c18440802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad65f7acb34b929b15f4e48b7ad06e868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad84a7172456f6494a7615b083e5b7e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::CADCConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac5d87deb8a77397ab185b17f3b7ad502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::CADCChannelConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab81527ca65b9aee4991d9f5bb3038bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::CADCChannelConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8891d7d1f4231f8fabed3ddc6e07d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4c458d65d58c05da0800ebb9452c119f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a587d0c4c03d755d975d358355410157f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa6b7fc0aefa776291310a819e2a8ec0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae77e13c83789819d6f2c6a670af71fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::CADCSampleQuad const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7383ba9adfd4c6326936349378a06a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::CADCSampleQuad const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9df3b85eb751f05c5e7dd1267f48629c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acf5e9f8409f6a67d954c89b197d536f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::SpikePack1ToChip const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3088dbc98444fe63678dec3235ad53fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::SpikePack1ToChip const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a80de3b86df7fb76a6716edd50f33ca3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd36abbe4c877d54b7c0673c0eff5f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a34d431c94485167cbe1d5a05ffaac24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9997e328686ae8aeb9f2d5fcb0ae4496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::SpikePack2ToChip const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab5d5c48082e437d37d583711d25ed6aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::SpikePack2ToChip const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8af36a01a053ce671d3f753419ef1737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::SpikePack3ToChip const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3e6c2e04a9602ac57e7e25a4f753eb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9916e404ae43144abc7957936e393687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::SpikePack3ToChip const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2bc8b54bc54ccc3a4e67e70ccfc674ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd89cf9400f1d5e5c69c13128e0fb1e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b00a30d81c42f7f5ae6deec97d42bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::FPGADeviceDNA const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a933d089a68717249c566704f63fd6b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aeab614aa4b32c0caabbdbb9d03ea8b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::FPGADeviceDNA const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0833e2c7c1eee6b381baf3ae33bb0497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acc308b6f6b360585451229b6d7d20316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::EventRecordingConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aeb8fe46c88fbe4a736f02695fba1b1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::EventRecordingConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aea0f7bde55782b6b6c6c6023c32ac69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac1f77076b314d9ef31e99008b7f91ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adf798964ccc2775fa4fda4a9cf47b2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::BackgroundSpikeSource const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acb02addb6fcd11b300ac03ddf33e9065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2d2f6742f7e8d190b28961a761f3facc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::BackgroundSpikeSource const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad5655c31a5a9e776ca6daeda023ef6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::CrossbarOutputConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af68116e4462df6f1958998444248cdad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::CrossbarOutputConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aba44c7c01bcfc42e2f689f155769befb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6f936d1944a3fec7672f0ac35dcfff5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a72a3e757930e91e8b969d1ac54529a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adf15a259947a67411a0f66e0482e6483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::CrossbarNode const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a229d118c39a43e0cb3c53842a4c0c09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae36232c40d54b670ef23a9c261ce1141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::CrossbarNode const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad0fb66dbacbd1c8ec580a2c3e27da3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::CrossbarInputDropCounter const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7ab0f5097a39f01dd66580ac2a21575f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad47ff916ed8d204c375e68a1258dd200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8dccee4a4da2741c3fdd66bfd0e19dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::CrossbarInputDropCounter const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8bc223181b0aba2ea2981c424075486e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3ac48d09cb6f32cbc9e590b28d037065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::CrossbarOutputEventCounter const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa863d18e9a4a87efc78b494c48a0d9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd0737b0f1333d142c7cedcfb17b7b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::CrossbarOutputEventCounter const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0e98875bed44c8e4051dd1b850c9ee8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a35a9ec25699c73f5b1592015e746c4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::SynapseBiasSelection const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a729e59f60be0d93e2e5b36ecaf0305ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::SynapseBiasSelection const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a99d74bc2a1ef4031c776868bb697caff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a218fb1a18c16c31c552859493e9bb7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::ReferenceGeneratorConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5b980fce6572a2a1fd94050be4b2c8ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab4fc165f4fd7ac6288f5a8745c295a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::ReferenceGeneratorConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a38e0051ce5b4ce62e81a0cd022ca1434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a16ad479c8e8e7346e0f0858ed21d008c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::PadMultiplexerConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2dd308d9779a8ae96496bf4e2f7d816b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abadf4d78fbcf92730ef5f8a86fdbd164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a69b0b982d1da13bcbbf1f950088807c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::PadMultiplexerConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a21e7c9023ec664aad3e6c16a796c46d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac7593523f417ca5734ac09a1e4885f66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3c5e1cbeb49162ce49d9c538aa4dc6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::ReadoutSourceSelection const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abcefa9481b7fc82d1a3b16063ab38785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::ReadoutSourceSelection const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1684544813ee66599d44f1ddc5bdacd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::MADCControl const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4dbe936faa06e5590d1a566b3e805c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad94838fdf6d2349d2a3c7fbe2268bd71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7b1aa501783ffb323750e5a3c0e3c93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::MADCControl const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abf4ad103f2e2b571ce8fa64029131130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::CorrelationReset const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1348d4177b84fe3c75dd2f2f69fc2ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ada1f5d1ff77a5bf917cd3d3d3d9e4b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad4e3a19668f975e9e3d9ef1c048a382f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::CorrelationReset const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4d7fe853dda31f4deb4303d88d304ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aec85652287dcac8e40c3518dfe2127c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a328686166e3228236be11d076a294642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::NeuronResetQuad const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abc4c9d58818e350a91122a71d18bea6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::NeuronResetQuad const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af66ed54d86b95b68c2f672363089988e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::CommonCorrelationConfig const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afa3585cbf2c6f929111126d0ce44d5b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afd98fd1831af80e385199cf4a43a2ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9eab6d6bd4f3a9dcaffe889d9b9de283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::CommonCorrelationConfig const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6f88cca35d4e14eb54d7ef1de586ab73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::BlockPostPulse const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a50bc62cf4b4870d37189a7064449f972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::BlockPostPulse const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5a0e91ffa9cf5ee22f2b4aa9af701bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7dfcdc663174b0551d89696f9aeeb364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aad2980f876a09b28af667d7662a9a90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::SystimeSync const &amp;config_reference, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aceae24ed5de6ddc635be357e91fe9894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad4caa528eb1e5817754d60ecd8291924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::Backend backend) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad232b7537528750e891881263ad8d2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::SystimeSync const &amp;config_reference) SYMBOL_VISIBLE</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ada5ad3b62643e98ae5e48e2d70f6c59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, PlaybackProgramBuilder const &amp;builder) SYMBOL_VISIBLE</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> const &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af89a054a538a659336aba0e4603d319c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>SupportedBackendIndex</declname>
            <defname>SupportedBackendIndex</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void stadls::vx::PlaybackProgramBuilder::write_table_entry</definition>
        <argsstring>(PlaybackProgramBuilder &amp;builder, typename T::coordinate_type const &amp;coord, T const &amp;config, std::optional&lt; T &gt; const &amp;config_reference)</argsstring>
        <name>write_table_entry</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1PlaybackProgramBuilder" kindref="compound">PlaybackProgramBuilder</ref> &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>typename T::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>std::optional&lt; T &gt; const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="169" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af79c8dbec008f2607bd1c399943bfb16" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>SupportedBackendIndex</declname>
            <defname>SupportedBackendIndex</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classstadls_1_1vx_1_1PlaybackProgram_1_1ContainerTicket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; T &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt;T&gt; stadls::vx::PlaybackProgramBuilder::read_table_generator</definition>
        <argsstring>(typename T::coordinate_type const &amp;coord, size_t backend_index, std::index_sequence&lt; SupportedBackendIndex... &gt;) SYMBOL_VISIBLE</argsstring>
        <name>read_table_generator</name>
        <param>
          <type>typename T::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>backend_index</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; SupportedBackendIndex... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a27897305905a252b300c4a45fd76e1c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>SupportedBackendIndex</declname>
            <defname>SupportedBackendIndex</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void stadls::vx::PlaybackProgramBuilder::write_table_generator</definition>
        <argsstring>(typename T::coordinate_type const &amp;coord, T const &amp;config, size_t backend_index, std::optional&lt; T &gt; const &amp;config_reference, std::index_sequence&lt; SupportedBackendIndex... &gt;)</argsstring>
        <name>write_table_generator</name>
        <param>
          <type>typename T::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>backend_index</declname>
        </param>
        <param>
          <type>std::optional&lt; T &gt; const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; SupportedBackendIndex... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Sequential <ref refid="classstadls_1_1vx_1_1PlaybackProgram" kindref="compound">PlaybackProgram</ref> builder. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" line="32" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzQ5Nw.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="31" bodyend="192"/>
    <listofallmembers>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2cb6570f0bd1fbe6e54e4c2232902971" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>copy_back</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4e159261af9f7905fa5ff5a3bc7b398b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>copy_back</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae16debbcae4ef64a56cf02ced33f4e52" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>done</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa361aed6f8044f0b76ee65bb5f90c725" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>empty</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa2d14f26c2c8befe1d95a3bea00e26f0" prot="private" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>m_builder_impl</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a49514ad0db88fd5fa382e81e4938df34" prot="private" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>m_executable_restriction</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3fd357f4d78389e34f49fefe281bb972" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>merge_back</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4a17d73b2ee1916e9b5e9903f7e806e2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>merge_back</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ada5ad3b62643e98ae5e48e2d70f6c59c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>operator&lt;&lt;</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1add5661db9a7ab699c72f8c37c1b413d3" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>PlaybackProgramBuilder</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afa4553a2bcad0db5178b3413abf22193" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>PlaybackProgramBuilder</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa8f3c161d29a87259de59704967fe6be" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>PlaybackProgramBuilder</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3fb31a9bc9bec7f57fb4d5f4fda57a27" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa5f2f05ab5462566f4c27d623851ba65" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5141f684c4565e616b42d3108a6a064d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a020ffaae6c53f6ce3a1d04e3fcf75768" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad6f84253bca74d5ba9ffcf4800893550" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1babdc12443a22aa312a7ae563c95e95" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a85c7bed528c9ba7e7db4f5ea34274d92" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a554f931f341502449659d7391d8d57dd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a46009e5a38e7ca2920d3484949630da7" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d7d05084fe6c37cfeba0e71cbbc628c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7e9af2bb7bbff4486387c214c343a857" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a24b75d4b64123834d06d2025d8a94247" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adb0c36a053097b803893c5452020d63b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1c3b6922034f0783b84cfc96f6d2a104" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae32647914d47d6886f53783247163abb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a08a4e3b6af1c0899079f8181cb78a04a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a89500996f09e8f62bf8acca8ebcf902b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae41dbff1dfef0f8ec251545567fed674" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a064499b8923f7f871eb747448dbfb7bf" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af83c0b3051247fede88ba0b4b5721703" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae465150dc8dc85125903adb2a7b48e0e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac60ee9b8dcb889b9c40dda6fdb1a6986" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac7ff31c0343d3f60073cbfbfe7272ccc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a141e52e0ee21cf5c2160c4fa77f7d920" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a190fd7e1b9d17a5e3a783a955093958a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad51c56fcd68a2dbbbab7c495170d2406" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa82a2e51289bd9e086500a076ecf6db0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab414c49c8c86099a8bc842e79a053c95" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aec88269b3b3e9d08fc8f900e95702edd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adbb7f830cf151871ab223d931e610f09" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad9c6b51f2de6749cebb06e25f5505fa0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa62154933749776a460b8afd419377aa" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad2319979852cf95c40372b017b2cf5a1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a85bc719b898ad0aacf25f14888bb125f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a444bcab72af034061a2431e5308d4da0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afdc7d290069c89044546e88e367a2145" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a677f20eb5cb2fdc0d601a4a7de123493" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a083a75f4ba54704e400d76517b6b0029" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a540e34935f7d3ba48ebb76044413ba88" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a13b114043af478454a4c1220b3d682b2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4632e469d96e6606e7e701f016c02d3f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a134d1d01f054e4dd4e388b4b5b65b384" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3e9a17a850a11742d5a03e2371017c08" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a04476da26c341ea2309263c47b7789ee" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad9dbfb000f7514f51115235aa0c06cc8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a63032197ab82b107b734c844e53b3011" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4a3ec0075eb1e5f03703b4b1aa1c1a74" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1ccbad70d59570a89677a686cb43ddea" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad51dd045d449e28321be4aa7a5c88672" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a61f8a646b414aeb6ecfb04c0f99bc622" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad92eb3cd6f14ce3b7f1c22edcf30f386" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae57e5f217a0d9e0d9c8f5171f3f99370" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa9d4e7e4abe9c3ce3a730dbc26ebf6c7" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a53dc1cbe8cda94d6bb51219c6f26981f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8871aa05721c854c0e42ba96efc64c9e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aaa33e7002ceff125ab3fa45659f30855" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a03f13f75c107386796b0f971090e86f1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a76da9028b550a515d23277a4165ca3bb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aea15d52929fb3733fd0fd22e36813974" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2da58080bbe3411ef9eeef1df9e25099" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae0c040e649ce301a177466d13ce55470" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0857a4191f1a49bfdf9824482a190e53" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3c09f1c7670dd8f889798b8d8521c174" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a895d450168237ab557c9bddfbeea6483" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3c2d6ccc77ed3cb250d7364342a66056" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8f770723b4764dffa811033773dc873" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a48f5ccf6f99ebc2f7df3bd75e72989bd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3175d774ae22e8422952742d05584312" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b42846920b5b9b0529ee9b7752b08d5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a18aab145117e661e43f4d29b0de8241e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8e42b7c2d608dd51c461ff13fa91b869" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad22c828eea78a05b910d4dcef8dc0673" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa3a28440ce69586d2fe1eb13b5bdda3b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af659b588f5c9f8bbd50b9fdd5dee5d2d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a34cf7df713ad85a28fac0ffe1f74213a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a373ac96a98c019a26043611f17ac3be5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afda31af7055f2bb7172d33513fd68de6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab2b4efc7fff3bbcaf8d6d0aa5837bf4e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab43c5bb5fa02a8b2dd12668962df1487" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6f8cbcf4f76f385c2e7d67fca6e1951b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5449db3cc0a92eda422a6bde5abcdee1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acdcfe3fd46fa1b6c156f0e94869449a4" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac80a64247d55c1036b5bf41e35305d69" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a908ad9e46e6def968489e362034aafc4" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a456236492cdb43757fd56252ec458b54" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae3ddd030d563ad845a6d752af9d53266" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a174227534f527fa1497c8f9af5ce0d0e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac507643305933fcca8027d4bcbdb5538" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d2e6af9ec009906c04c18c22988a709" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aacb63017ca7019403121376fd4ff866c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7d02568e07e52d637e53dff46f34f07f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa0ff014ac998bac6cd1d54ed5b203f9f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0937bc47b55ee74e19bdf6509dab73b6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3bff995274add070d0abbb39f3a7178e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a855962c953f36aab21046dcd9b6d2be0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a36a8aaa73b3f59b64cd0aa595c817fcb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8affa265013ce4973b74bd9fcf8577f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7578de2f0b41a484e9589d52cc9b18ad" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a178a6c5e15538294944507075fb184fb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afa1fccde6028ed944340648e35a80beb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa5704f7131ae04daf7fdf87ed926169f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e7ad0b5e6a0528f12d3d56f8eabfbf4" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac8a464831d196a1923426cecd717e2a5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a454bc787d1ed81062f4b971983fc355b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa7167d02ce9676ee7e4a472237124a6b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5502d97d08a70925e51f149e6f404a67" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aefd66d8ac765f1a4d2d4b28f4a296748" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6689043f0445ef246f1d583e1b63f4c1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab811bee2132a6b0e9faaf68af6b78610" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7c63e4c41eab47da7af02543f9d49be" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2b45fa83e9fc19b871656669943e4c68" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3d4f6f857da21cdb4d37b4d5e7450eef" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a51460d73612200ddd2079f00d6a63c8d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae55d722f63a383086eaaa1d572ed0766" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3e9c4a956f257a75dacb45413e394b7c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0a0238d62044444a3c7517282de8aade" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a130c63459f2d7dd2e498cd274aaa997f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afb11b55b446b0165c5967fe5af7b8c87" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd501deddd5a66a8068abb93a55f8ac2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b2f3e26f276d866015baf4f02fcb67f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afcf2e5fee69ea9df0cf14d38a71b333e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a30261899322d17c152f863dc55d3504c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1c39aed0c5ef4dfee0c49d7bb29db02f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa72bc83e140d98f1eabacfa6f620f7bd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4075a0e2ed2309355363f4bdde3c8284" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1f3df52b2d99e0a49156538b47b808c2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a462509dda5373cf2de6b54e128cf84ac" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7f5323d29d66846028777e26dcc78cb8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7bd5834dfaea64a190330aed71f7939" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a895ca016c8c96607e8680f64dc0da198" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a18a3da5b3bae33f48dbe70f4c299702d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a119801d95573562be98ab7483fe96aa6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af79c8dbec008f2607bd1c399943bfb16" prot="private" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>read_table_generator</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af9c6d65e435dffa0d86f7f1f896cbb2e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>wait_until</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1add42b9be3079c08863ff4a20b8e88d77" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9f9145c6865712413f0d8801fc213386" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9ae0eb17919a40fc4a87bd669f6fdb09" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a65e9a0ae1f2cd411798e664d44034248" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6dd2a4fd66c486a33c77800f069accb4" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad7a03518711bc779ea999540f1652557" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab776467535da0ef0f7c23e51cce54c56" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6dbb0306f9ecf2adda9eb5dc1d3f12fb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a81a78d8e811c8249c41e68b01370ae9b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a79f74944ac098d756771f62472233474" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae3c030762a488edb810d65dfdd45a74e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad152364cc0e051e8f6e7083004971eda" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a72a95ffb94816afed7a44538ae5e877b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac4c05046afe13cccc73542470d2ae8d5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a84bdd6e2eeea4fdefb4fb86de93bb281" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a78af26953ed1cf447d1300e884b467f8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1231be8bcca036da35ba60c4f51d4a16" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2cc87ca26f1ab565869f324b027139c7" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3188f048cac1837a5588b1e1a0ce3984" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad19ce022762c90c9eebdc938b499e871" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad1d10cd376783ef0207c6b58d5a81210" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab63e7613bf3c9cb2fa47d7e0a7589c72" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa7894dbcd4c3010e51cea6c4b276607a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e8efbd69294cfebbcd31ee68cf6c754" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2fe223d983d5c06632d46ef5d50f2bf7" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a578572c55a7f52ec4716b578e94c8fa2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa610061b4c1b8a6dda58baddd9f18c5c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a01c53247191c11611978d9c8474a4f11" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae5f67383d89e88ce444c8fc5a6e1f610" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae9b6846564b13ddf647f0b2bc8aada76" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a474fdeef27810e0338fc61ed6c3307e6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a740775577c2ef5d6a57429e4ae17511e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a08505af3cc00365c83c62c19dea07579" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d67fd58c2fcc017cfca20a4e2d04e14" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7b09b1e7f9f31f72cbb3a2999cb875bf" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a90a585becb21bc2bdf477e20710668e0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a115c2c5a4c50bbaf1557475df34dec66" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae5805f41129b42c5c7e43138d6033cbc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a99fcea2ee439712f51f5c47e856f9b94" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a56990da9202cbb7733ccbf05313a195a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a00e1667179aea46d121a4d03445c047f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abfdd5ffcaf10d35a0be80a50fe3023dc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a326f45bce053e6c1e12ea1e1448aae70" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7cf7431d8da98fbf0f57920ab45cd07" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a85b1e67dd4e678ce75b928bc63679894" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7637bebdc5a36a1b4632605c32741a53" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8fed58b1c50bf5b4956323523e9a789" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6738ea64825f0d3d8d8423afc1fcdad2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2211ea6bcd00ac64a011e1816222c64c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9816d240894df6e553d1fdb7149c3554" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae7e88fdc93eb03ada64c74e2ffa75b35" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab9643e381bc0dc5ce626168e5d4e6cf7" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afb20fc06fa6e37628a5644409f1c4b22" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a865735b6da230db9a049f54b428645b0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a96927ccd97b90eb07e6726e38937795d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2ae58e4a27734eb7e979b921e64454bf" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad6206b550df9acb6baf4aa3bebcbaf8a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5883eeace400d152a51dd5e22cda79dc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a547ff8f452453731d75ed0f64d028d8c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a84e40d3ae887ca716a450e165359b339" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac5d7e75abd6b9ec06c05117a9b985f55" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7734278fe97af2c11eb60782884ee28a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aafd8b8a7a891d118abb20e69d81cd65d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af87a7fc1ac689f95bbb4a1e6bb97e5b8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7f36c19758c35ed58f2cb0805cb2e5d8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6d1425b5edcb360ada590f48ff88fd97" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac04db84ab3b0f251d564fd27961f5020" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa9c4fd2e9dd2bc03f1fa14b06f04c9b3" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a81b71271529094923546b013b83881cb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a28df4fbfccb518eea0079f9391928abe" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a066de8c03c14d78cce78e530c091c811" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a012191fe3f3b0fbd8ef52acd3c08a377" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8aeaf6711be5e2cfc0325d104e923cf3" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a59cd34a6c41a36b4061092c3f26b509c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa4014487830607ca378bb2196ecbebd9" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a234ed458232c1511f1d84ecce15caa64" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9f850bfbf89296fa4270daaaeaa28a16" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6fded2607cc3639ce9904baa1f217447" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a84414c26c1440fc92df1353b6c0f221a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad08e6cd422829b142afaaa874bc56e1d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab4e173b9fdc53121e08e4f2e1aa24d18" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6afa5d9050d448aa19dc1e9afeefc5ce" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afae4c988024af7c92ecd84feab71b554" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abd292e1f0cacdd0fd418eb9e44777743" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a985daa44ab26f1a376c9a8ad52217c14" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a084b1c63748cf52aaabb10dd391c5a45" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a547abf4749bf6add624cab1053ce282e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a27acea873b401b74b46c456c15a657cd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae03ead480277db4de6975e14f27e25ee" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a232cc9911afe6dfabf7f837ff5b9af9e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a091d75477cbabbb7ebc6236e44f13a19" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a62e50682c6c0b6ccb6bcaff1e074ed0d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab1ba2b47334faf2ff045b9d319ebab68" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7ce7cc2df435ced0bfd1c9046b3f7b0f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9d1fb71481f9277a513311752a5ee8e0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2c3856ac595ccba138601c9e3dc7392e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a592faeeac5c5fb08e10e2fe6adf7307f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a01592591a6930e46b8116a89c53499c5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a222d6970b2310265a435a5db33ce62db" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7712da80b4d5bfcd3f14d73ee8078dfc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5b2bab661703b93f73a6ddb3f2808942" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6969a2900f06ca6ced293e9437e8440a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae54165225d787b67af2c3085ab83b12a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4d52b0c6515fbbd86f01ce93b04a6daf" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abcebc767136a7bcb68de27f2a66dc8f0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad3c66e325ce2da1e16f08578cbf0037f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9e3bc8de7173107d44a4d6bde6e6ae58" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a86ed7d063eb3e46385b9f81e5e3a047a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a53949ee6ade1daed533e25cb9ed14411" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a589254dde13919f56024bbfaea87a442" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a87b4e3896710cfed72a33f9d85c43e78" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abdd11c3c80b4692116fae8e64147c932" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7aed0a1d35f66f7ead198e55d91ee7c2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adf5a4407cdde9903e24ecd8c81b8815c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abb151534f761ff8dca8233900d8ae95e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab31a74232ca85de6005f749a8cd0815e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9ed5d52b3a7e8e4ecbdb38b675077769" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac61e03693317697ccd843d5061e89ac3" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af4cce603c4345d5ba5417be8bcf73f29" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6de595ad6b6234fbeeea83d3832ea359" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a35dec79fa8cea36b6b06e17c0202744c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e315e2fac95bf195b806f752d53be94" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a439fed924f3afcb0949556b594f05756" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2be1d961c4af800bbb5152a5e7f0e619" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a64bd9533bbff0b762842f09bbbb516df" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6bb33e1c747da5b14ef78bc27f683ab6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8e23df76c2b3b7b7314eef817af6f9b1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7ec57b4984b3409d215d5ffb2f3cef74" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b2c03e45be28b62d4f3f4e0c113545d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5e2665b1117edd9dc555b16e71ff280c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae2bdef22c1607f8e7ae04f5429890330" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a42d1d0b362c073f2f61bffefd7bd262e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adeb94759a63949099918e28b046a9e9b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acc223153b3ee287098d95a2a1d6c3098" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ace02d3f207ba3b008f96500a3ac536c6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a065b13636d7de3fccf37849c7e14471b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9403fe83e16478766d4618659bb7097e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8cf986f72b9e4354f1e3f9b9db8d35f8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afddbf6c290889c1e2abcd64994abf4eb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6e56b12c8f93fb79b6532aa792b805bd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab79e81101573b086957c11130730afb9" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7be0f913aa60e3b681ff41f0df36c457" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac0d5626893ddc9d2c2362d04ef3536f5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0980f1c9716302f62093961541df4972" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a72793d69883d3e63a976dd3f8372155d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad2e96dce1cdf4c04722cea4346c8e8ed" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac2e1b06d2f01f819a211fbac2884a66c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab227d3ce4eb48031e1944b38e2192cf6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aca7a1297ad6cbc399d1f3dda621834da" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acb1b50fb48ee9e3471ccd6ed32f4b566" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a43a7c78d59f44b5677b27ebafe240653" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acdcc3a160102ed1f1ee0c7b97fee42ab" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2d4b9db8f02980834e5b10ecaa2cd567" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9f2b7ff8b36459549e1c1f5d68723a68" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a555d439d1c0b5a350522a7f274ec3c38" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5f5eaa9654f6c4d970d5236ee5a03751" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aacb4278b66a62127e1280e6adda1f218" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8c87563e96f28aa49a836ade23a9c549" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b019b3d08a8e8877f7f8baeb1666a9a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac95e0b860780c6623e1f0f08885350c1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a732fce804559e154e3ad892bd813b06d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6229fdeacb56dd7ddf8b9107c008b93e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1f813a18c0731191c3b1773ef8d9b43a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aae5935cbeaa53c2c2a66aeba8eb0aeaf" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a156bc03d80df7986a89d173f7068b4dc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adbb5e8add8007c2bd394ff54a1898085" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad1e3f32d77ae900bac31538f74a5feb8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1f83b54f580e57c63cdf6c0c75f97ddc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa7e6dbee4266fa07e693f88250f52e91" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abd13796f8b45b271c9f068441b0ac76e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1a4a3f5f678adf77bf9e5b7d07a6530f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a60a66a07443de6c03e56c0dff4d958c6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5d8040af32db1b703649403c18440802" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad65f7acb34b929b15f4e48b7ad06e868" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa715484972de6e4463aa8f2cf4795abe" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad84a7172456f6494a7615b083e5b7e44" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4c458d65d58c05da0800ebb9452c119f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af8891d7d1f4231f8fabed3ddc6e07d4a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac5d87deb8a77397ab185b17f3b7ad502" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab81527ca65b9aee4991d9f5bb3038bb9" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa6b7fc0aefa776291310a819e2a8ec0f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a587d0c4c03d755d975d358355410157f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae77e13c83789819d6f2c6a670af71fba" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7383ba9adfd4c6326936349378a06a5c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9df3b85eb751f05c5e7dd1267f48629c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a80de3b86df7fb76a6716edd50f33ca3d" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acf5e9f8409f6a67d954c89b197d536f0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3088dbc98444fe63678dec3235ad53fb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd36abbe4c877d54b7c0673c0eff5f9a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a34d431c94485167cbe1d5a05ffaac24e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9997e328686ae8aeb9f2d5fcb0ae4496" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab5d5c48082e437d37d583711d25ed6aa" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2bc8b54bc54ccc3a4e67e70ccfc674ce" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3e6c2e04a9602ac57e7e25a4f753eb54" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9916e404ae43144abc7957936e393687" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8af36a01a053ce671d3f753419ef1737" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a933d089a68717249c566704f63fd6b45" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd89cf9400f1d5e5c69c13128e0fb1e8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1b00a30d81c42f7f5ae6deec97d42bb4" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aeab614aa4b32c0caabbdbb9d03ea8b9c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0833e2c7c1eee6b381baf3ae33bb0497" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aea0f7bde55782b6b6c6c6023c32ac69f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aeb8fe46c88fbe4a736f02695fba1b1b6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acc308b6f6b360585451229b6d7d20316" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac1f77076b314d9ef31e99008b7f91ea9" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acb02addb6fcd11b300ac03ddf33e9065" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adf798964ccc2775fa4fda4a9cf47b2d1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2d2f6742f7e8d190b28961a761f3facc" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6f936d1944a3fec7672f0ac35dcfff5e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aba44c7c01bcfc42e2f689f155769befb" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af68116e4462df6f1958998444248cdad" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad5655c31a5a9e776ca6daeda023ef6ae" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a72a3e757930e91e8b969d1ac54529a55" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a229d118c39a43e0cb3c53842a4c0c09e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1adf15a259947a67411a0f66e0482e6483" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ae36232c40d54b670ef23a9c261ce1141" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7ab0f5097a39f01dd66580ac2a21575f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad47ff916ed8d204c375e68a1258dd200" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad0fb66dbacbd1c8ec580a2c3e27da3ea" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8dccee4a4da2741c3fdd66bfd0e19dc7" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aa863d18e9a4a87efc78b494c48a0d9b2" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a8bc223181b0aba2ea2981c424075486e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3ac48d09cb6f32cbc9e590b28d037065" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1acd0737b0f1333d142c7cedcfb17b7b79" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a99d74bc2a1ef4031c776868bb697caff" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a0e98875bed44c8e4051dd1b850c9ee8c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a35a9ec25699c73f5b1592015e746c4c1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a729e59f60be0d93e2e5b36ecaf0305ea" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5b980fce6572a2a1fd94050be4b2c8ad" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a38e0051ce5b4ce62e81a0cd022ca1434" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ab4fc165f4fd7ac6288f5a8745c295a63" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a218fb1a18c16c31c552859493e9bb7c5" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a2dd308d9779a8ae96496bf4e2f7d816b" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abadf4d78fbcf92730ef5f8a86fdbd164" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a16ad479c8e8e7346e0f0858ed21d008c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a69b0b982d1da13bcbbf1f950088807c6" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a21e7c9023ec664aad3e6c16a796c46d8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ac7593523f417ca5734ac09a1e4885f66" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a3c5e1cbeb49162ce49d9c538aa4dc6e1" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abcefa9481b7fc82d1a3b16063ab38785" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad94838fdf6d2349d2a3c7fbe2268bd71" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4dbe936faa06e5590d1a566b3e805c8c" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1684544813ee66599d44f1ddc5bdacd0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7b1aa501783ffb323750e5a3c0e3c93a" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ada1f5d1ff77a5bf917cd3d3d3d9e4b19" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a1348d4177b84fe3c75dd2f2f69fc2ca0" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad4e3a19668f975e9e3d9ef1c048a382f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abf4ad103f2e2b571ce8fa64029131130" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a4d7fe853dda31f4deb4303d88d304ba3" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aec85652287dcac8e40c3518dfe2127c9" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1abc4c9d58818e350a91122a71d18bea6f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a328686166e3228236be11d076a294642" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afa3585cbf2c6f929111126d0ce44d5b8" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1afd98fd1831af80e385199cf4a43a2ed3" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a9eab6d6bd4f3a9dcaffe889d9b9de283" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af66ed54d86b95b68c2f672363089988e" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a7dfcdc663174b0551d89696f9aeeb364" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a5a0e91ffa9cf5ee22f2b4aa9af701bbd" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a50bc62cf4b4870d37189a7064449f972" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a6f88cca35d4e14eb54d7ef1de586ab73" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad4caa528eb1e5817754d60ecd8291924" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aceae24ed5de6ddc635be357e91fe9894" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1aad2980f876a09b28af667d7662a9a90f" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1ad232b7537528750e891881263ad8d2ac" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1af89a054a538a659336aba0e4603d319c" prot="private" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write_table_entry</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a27897305905a252b300c4a45fd76e1c1" prot="private" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>write_table_generator</name></member>
      <member refid="classstadls_1_1vx_1_1PlaybackProgramBuilder_1a81968b29864752dcdd20483203259ace" prot="public" virt="non-virtual"><scope>stadls::vx::PlaybackProgramBuilder</scope><name>~PlaybackProgramBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
