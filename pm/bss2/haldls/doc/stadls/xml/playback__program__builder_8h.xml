<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="playback__program__builder_8h" kind="file" language="C++">
    <compoundname>playback_program_builder.h</compoundname>
    <includes local="no">iosfwd</includes>
    <includes local="no">memory</includes>
    <includes local="no">unordered_set</includes>
    <includes local="yes">haldls/vx/container.h</includes>
    <includes local="yes">lola/vx/container.h</includes>
    <includes local="yes">halco/hicann-dls/vx/barrier.h</includes>
    <includes local="yes">haldls/vx/barrier.h</includes>
    <includes local="yes">haldls/vx/common.h</includes>
    <includes local="yes">hate/visibility.h</includes>
    <includes local="yes">hxcomm/vx/target.h</includes>
    <includes refid="dumper_8h" local="yes">stadls/vx/dumper.h</includes>
    <includes refid="genpybind_8h" local="yes">stadls/vx/genpybind.h</includes>
    <includes refid="playback__program_8h" local="yes">stadls/vx/playback_program.h</includes>
    <includes local="yes">haldls/vx/container.def</includes>
    <includes local="yes">lola/vx/container.def</includes>
    <includedby refid="playback__generator_8h" local="yes">/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_generator.h</includedby>
    <includedby refid="init__generator_8h" local="yes">/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/init_generator.h</includedby>
    <includedby refid="stadls_8h" local="yes">/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/stadls.h</includedby>
    <incdepgraph>
      <node id="203">
        <label>cstdint</label>
      </node>
      <node id="194">
        <label>stadls/vx/dumper.h</label>
        <link refid="dumper_8h"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>variant</label>
      </node>
      <node id="201">
        <label>stadls/vx/genpybind.h</label>
        <link refid="genpybind_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>halco/hicann-dls/vx/barrier.h</label>
      </node>
      <node id="187">
        <label>haldls/vx/container.h</label>
      </node>
      <node id="183">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h</label>
        <link refid="playback__program__builder_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/common.h</label>
      </node>
      <node id="205">
        <label>string</label>
      </node>
      <node id="209">
        <label>fisch/vx/run_time_info.h</label>
      </node>
      <node id="200">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/neuron.h</label>
      </node>
      <node id="191">
        <label>haldls/vx/common.h</label>
      </node>
      <node id="186">
        <label>unordered_set</label>
      </node>
      <node id="207">
        <label>haldls/vx/event.h</label>
      </node>
      <node id="210">
        <label>pybind11/numpy.h</label>
      </node>
      <node id="213">
        <label>lola/vx/container.def</label>
      </node>
      <node id="193">
        <label>hxcomm/vx/target.h</label>
      </node>
      <node id="190">
        <label>haldls/vx/barrier.h</label>
      </node>
      <node id="208">
        <label>stadls/vx/run_time_info.h</label>
        <link refid="run__time__info_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>optional</label>
      </node>
      <node id="197">
        <label>vector</label>
      </node>
      <node id="195">
        <label>utility</label>
      </node>
      <node id="206">
        <label>fisch/vx/playback_program.h</label>
      </node>
      <node id="192">
        <label>hate/visibility.h</label>
      </node>
      <node id="202">
        <label>stadls/vx/playback_program.h</label>
        <link refid="playback__program_8h"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>iosfwd</label>
      </node>
      <node id="188">
        <label>lola/vx/container.h</label>
      </node>
      <node id="198">
        <label>boost/hana/adapt_struct.hpp</label>
      </node>
      <node id="211">
        <label>pybind11/stl_bind.h</label>
      </node>
      <node id="212">
        <label>haldls/vx/container.def</label>
      </node>
      <node id="185">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="214">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h</label>
        <link refid="playback__program__builder_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_generator.h</label>
        <link refid="playback__generator_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/stadls.h</label>
        <link refid="stadls_8h"/>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/pystadls.h</label>
        <link refid="pystadls_8h"/>
      </node>
      <node id="216">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/init_generator.h</label>
        <link refid="init__generator_8h"/>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" prot="public">stadls::vx::detail::PlaybackProgramBuilderAdapter</innerclass>
    <innerclass refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" prot="public">stadls::vx::detail::PlaybackProgramBuilderAdapter</innerclass>
    <innerclass refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_impl" prot="public">stadls::vx::detail::PlaybackProgramBuilderAdapterImpl</innerclass>
    <innernamespace refid="namespacefisch">fisch</innernamespace>
    <innernamespace refid="namespacefisch_1_1vx">fisch::vx</innernamespace>
    <innernamespace refid="namespacestadls">stadls</innernamespace>
    <innernamespace refid="namespacestadls_1_1vx">stadls::vx</innernamespace>
    <innernamespace refid="namespacestadls_1_1vx_1_1detail">stadls::vx::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="playback__program__builder_8h_1a6d32ec951a492e6c29f32f7b856e2869" prot="public" static="no">
        <name>PLAYBACK_CONTAINER</name>
        <param><defname>Name</defname></param>
        <param><defname>Type</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="91" column="9" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="playback__program__builder_8h_1a36437f7c5444ddb05a668d46186a53c7" prot="public" static="no">
        <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">detail::PlaybackProgramBuilderAdapter</ref>&lt; fisch::vx::PlaybackProgramBuilder, PlaybackProgram &gt;</type>
        <definition>typedef detail::PlaybackProgramBuilderAdapter&lt;fisch::vx::PlaybackProgramBuilder, PlaybackProgram&gt; PlaybackProgramBuilder</definition>
        <argsstring></argsstring>
        <name>PlaybackProgramBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="276" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="playback__program__builder_8h_1ac1410b2729c2d36a62ec7daf4270a907" prot="public" static="no">
        <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">detail::PlaybackProgramBuilderAdapter</ref>&lt; <ref refid="class_dumper" kindref="compound">Dumper</ref>, <ref refid="class_dumper_1a472ce523e094279d524f181f9288fe09" kindref="member">Dumper::done_type</ref> &gt;</type>
        <definition>typedef detail::PlaybackProgramBuilderAdapter&lt;Dumper, Dumper::done_type&gt; PlaybackProgramBuilderDumper</definition>
        <argsstring></argsstring>
        <name>PlaybackProgramBuilderDumper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="278" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="playback__program__builder_8h_1a0544c3fe466e421738dae463968b70ba" prot="public" static="no" mutable="no">
        <type></type>
        <definition>else</definition>
        <argsstring></argsstring>
        <name>else</name>
        <initializer>{ 				ss &lt;&lt; &quot;PlaybackProgramBuilder(to FPGA size: &quot; &lt;&lt; p.size_to_fpga() 				   &lt;&lt; &quot;, is <ref refid="playback__program__builder_8h_1a10bd49600d60374fc504e8097957aeac" kindref="member">write</ref> only: &quot; &lt;&lt; std::boolalpha &lt;&lt; p.is_write_only() &lt;&lt; &quot;)&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="playback__program__builder_8h_1aae06626f067a4e8ea7abf26d41fd7fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>empty::~PlaybackProgramBuilderAdapter</definition>
        <argsstring>()</argsstring>
        <name>~PlaybackProgramBuilderAdapter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a61763b3b88c84778fb919b5bdf6d1f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::block_until</definition>
        <argsstring>(typename haldls::vx::Timer::coordinate_type const &amp;coord, haldls::vx::Timer::Value time)</argsstring>
        <name>block_until</name>
        <param>
          <type>typename haldls::vx::Timer::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer::Value</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified timer has reached specified value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer coordinate for which to block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer value until which to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a87c1b3eb216f7d058af999deb521049f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::block_until</definition>
        <argsstring>(halco::hicann_dls::vx::BarrierOnFPGA const &amp;coord, haldls::vx::Barrier sync)</argsstring>
        <name>block_until</name>
        <param>
          <type>halco::hicann_dls::vx::BarrierOnFPGA const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Barrier</type>
          <declname>sync</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified barrier is completed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Barrierhronisation coordinate for which to block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sync</parametername>
</parameternamelist>
<parameterdescription>
<para>Barrierhronisation value for to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5d52b1689d3be3d921b49c3169460f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>if</type>
        <definition>if empty::constexpr</definition>
        <argsstring>(std::is_same_v&lt; std::decay_t&lt; decltype(p)&gt;, ::stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; ::stadls::vx::Dumper, ::stadls::vx::Dumper::done_type &gt;&gt;)</argsstring>
        <name>constexpr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a14bc9bf99f589b8cbf240ca6b4e27ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="playback__program__builder_8h_1a36437f7c5444ddb05a668d46186a53c7" kindref="member">PlaybackProgramBuilder</ref></type>
        <definition>PlaybackProgramBuilder convert_to_builder</definition>
        <argsstring>(PlaybackProgramBuilderDumper &amp;dumper) SYMBOL_VISIBLE</argsstring>
        <name>convert_to_builder</name>
        <param>
          <type><ref refid="playback__program__builder_8h_1ac1410b2729c2d36a62ec7daf4270a907" kindref="member">PlaybackProgramBuilderDumper</ref> &amp;</type>
          <declname>dumper</declname>
        </param>
        <briefdescription>
<para>Convert a PlaybackProgramBuilderDumper to a PlaybackProgramBuilder. </para>
        </briefdescription>
        <detaileddescription>
<para>The dumper is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dumper</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_dumper" kindref="compound">Dumper</ref> to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab5a81255d0bbd79adbcc6cc3a3eace3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="playback__program__builder_8h_1a36437f7c5444ddb05a668d46186a53c7" kindref="member">PlaybackProgramBuilder</ref></type>
        <definition>PlaybackProgramBuilder convert_to_builder</definition>
        <argsstring>(PlaybackProgramBuilderDumper &amp;&amp;dumper) SYMBOL_VISIBLE</argsstring>
        <name>convert_to_builder</name>
        <param>
          <type><ref refid="playback__program__builder_8h_1ac1410b2729c2d36a62ec7daf4270a907" kindref="member">PlaybackProgramBuilderDumper</ref> &amp;&amp;</type>
          <declname>dumper</declname>
        </param>
        <briefdescription>
<para>Convert a PlaybackProgramBuilderDumper to a PlaybackProgramBuilder (rvalue reference overload). </para>
        </briefdescription>
        <detaileddescription>
<para>The dumper is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dumper</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_dumper" kindref="compound">Dumper</ref> to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a38a6f9efa1428221513ceaf7cb30fb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="playback__program__builder_8h_1a36437f7c5444ddb05a668d46186a53c7" kindref="member">PlaybackProgramBuilder</ref></type>
        <definition>PlaybackProgramBuilder convert_to_builder</definition>
        <argsstring>(Dumper::done_type const &amp;cocos) SYMBOL_VISIBLE</argsstring>
        <name>convert_to_builder</name>
        <param>
          <type><ref refid="class_dumper_1a472ce523e094279d524f181f9288fe09" kindref="member">Dumper::done_type</ref> const &amp;</type>
          <declname>cocos</declname>
        </param>
        <briefdescription>
<para>Convert a sequence of coordinate container pairs to a PlaybackProgramBuilder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cocos</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate-Container pair sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a03a800dafc10ba019947f43739033428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::copy_back</definition>
        <argsstring>(PlaybackProgramBuilderAdapter const &amp;other)</argsstring>
        <name>copy_back</name>
        <param>
          <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">PlaybackProgramBuilderAdapter</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy other PlaybackProgramBuilderAdapter to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The copied-from builder is untouched during the process. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>On other builder not being write only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to copy to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac2f2e2319c903f5870cc0fffe8188e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::copy_back</definition>
        <argsstring>(BuilderStorage const &amp;other)</argsstring>
        <name>copy_back</name>
        <param>
          <type>BuilderStorage const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy BuilderStorage to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The copied-from storage is untouched during the process. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>On other builder not being write only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>BuilderStorage to copy to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5b0c051c1cb47a2d1676a6537f540a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>parent</type>
        <definition>parent empty::def</definition>
        <argsstring>(&quot;__str__&quot;, [](GENPYBIND_PARENT_TYPE const &amp;p) { std::stringstream ss;ss&lt;&lt; p;return ss.str();})</argsstring>
        <name>def</name>
        <param>
          <type>&quot;__str__&quot;</type>
        </param>
        <param>
          <attributes>[]</attributes>
          <type>(GENPYBIND_PARENT_TYPE const &amp;p) { std::stringstream ss;ss&lt;&lt; p;return <ref refid="playback__program__builder_8h_1a9ce751ab836cd6ee6a3eff9e0dee60aa" kindref="member">ss.str</ref>();}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab0a904333dd1c5f68ac105a1f47e1cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DoneType</type>
        <definition>DoneType empty::done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <briefdescription>
<para>Close PlaybackProgram build process and return executable program. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Executable PlaybackProgram </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3ae2228e66a4206e0ec224eecbec7c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::merge_back</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">PlaybackProgramBuilderAdapter</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge other PlaybackProgramBuilderAdapter to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from builder is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0ab0a5ce0a52f9ef085ade48dda8e908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::merge_back</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;&amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">PlaybackProgramBuilderAdapter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge other PlaybackProgramBuilderAdapter to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from builder is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afd86623ed82eeb9c2aa2ad6ec15c9533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::merge_back</definition>
        <argsstring>(BuilderStorage &amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type>BuilderStorage &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge BuilderStorage to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from storage is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>BuilderStorage to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aace4ca11c78dfbe2ab5c6fbf1e2a5f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::merge_back</definition>
        <argsstring>(BuilderStorage &amp;&amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type>BuilderStorage &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge BuilderStorage to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from storage is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>BuilderStorage to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad1dcea13ccc5893f5835cec7cd6de8b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>friend std::ostream &amp;</type>
        <definition>friend std::ostream&amp; empty::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, PlaybackProgramBuilderAdapter&lt; T, U &gt; const &amp;builder)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">PlaybackProgramBuilderAdapter</ref>&lt; T, U &gt; const &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3378e1ab3637d08ffe3fb6801818f34e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">PlaybackProgramBuilderAdapter</ref> &amp;</type>
        <definition>PlaybackProgramBuilderAdapter&amp; empty::operator=</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" kindref="member">PlaybackProgramBuilderAdapter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad38ca27d429e4e38c0d1ff4ed7e6117b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>empty::PlaybackProgramBuilderAdapter</definition>
        <argsstring>()</argsstring>
        <name>PlaybackProgramBuilderAdapter</name>
        <briefdescription>
<para>Construct builder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2390d33a3fe1e37fdb314ce0261758b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>empty::PlaybackProgramBuilderAdapter</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;&amp;other)</argsstring>
        <name>PlaybackProgramBuilderAdapter</name>
        <param>
          <type>PlaybackProgramBuilderAdapter &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab54bcef1897fcc561a0da2bc937c0af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>empty::PlaybackProgramBuilderAdapter</definition>
        <argsstring>(PlaybackProgramBuilderAdapter const &amp;)=delete</argsstring>
        <name>PlaybackProgramBuilderAdapter</name>
        <param>
          <type>PlaybackProgramBuilderAdapter const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa18104337b8e20f2dbeb6048dceb763a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Config &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Config &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a23ab984a68222f2509cfd487d24c7a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Config &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Config &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a71045c8258d8cfa5d5334d67cb604d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Status &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Status &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1adce79888a18ab4f65c6e2c0345699330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Status &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Status &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6dee497f0a26b9b4880db882245bbfe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NullPayloadReadable &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NullPayloadReadable &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2ab30af11680dd39f8bb91beb28bedad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NullPayloadReadable &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NullPayloadReadable &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2aa3e87d3a73097ab3ff5fc764dee4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a58b1cb81b22c282a1002e7923c53d0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae0b6491a0f0c5b774bb9d4c3e4759e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1adb23be11b84a104a74cb4a9ef251aa1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a30de5f2ab0d2c6b90d85116db0391d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a57a7c93c60940cfdfc4cedd1dd8beab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aafdaa3dd2f172490d29962b1b696ef5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3de9dd24d571386149329a30449db81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3f497598cdd0b09b03aeaa67a19f9ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ExternalPPUMemoryByte &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ExternalPPUMemoryByte &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2ad83b4801827a1f23b5fd634abe5bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ExternalPPUMemoryByte &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ExternalPPUMemoryByte &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad4958bb4c978618232e8f14f049b6f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a21ad2aaf35271fe45bce0765ad440d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4039c4112f6556c88745fa166a8fbfec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8c6d0bb0035952143b8c3280f1dce17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac25732e7ecdc9d8059793c4197468e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0d91e92b385822c0723bb91820b5cd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7b558afaac387cee22eff194c2402f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab86c041ab630226141f80aecbc888c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a581ee5992f658eb9e9f5d7e3d75d3e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af9225721e7886bd37965329c5242924a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2c0dce973fee46e9ddfe4010f6004fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3eb18cca9bd05bd216175015a1b8045f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6a08c73c9117cad297b2f90361e75dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7aa50def78bdaf87d5bfd46d24f1d63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6ab1b9d0aefee1044de55ab9524503b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5ea8506dba36033a7b71fad474890db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a81812941efbf59acee117f014bd230d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac8c8aab6f9bb85f7135f8430e6e69bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5ca7fecb75303f12804b9f8be3cc3dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a23f02c910ef26dcce62649e1aff13370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a988183c56763c171bcd7473ef59c1836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a594f578ca186585cbb5a446f8a7213f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7884f809f1a5da52cf8f4e543066e64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7e3a3940725dc19a3250b0383c094291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0b02b4d7896eefc99ae5f9bb880b1b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a664360b46beb54a9b7fc88329bf50dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac95488fc75e1e1701fd44abd09e328a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afdd524b0da69fa65ee7f8ab81f536c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a38e396f5282c076b88c3c948c858efe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8c3b2da8186117a8791609f316d7866d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a894849066f5573daba87e16a768edcb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a44e05c094307f0d156cba08668a56e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a11a7895f67fd0af5d9f479e495ba9006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a47c6f7ee61a576dfb35edad185b04f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af72874076ae0767b31f576cb75db8227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a013d6a618b04735b28433c1d992b13a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a934c0ca7751944f162010c596aebc8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a036c152696036e56795fb0abad1ad705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6dee6e1d8686786178e85a2499d0045e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac8e6ac850bcd21bf74794304588e6bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4520612848bcd0457df5bfa888279b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae02e7392d4576c8d72fa5417f3f3f335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1adb50093a8e14b457a92b9d24f5ebfcd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ada0a706fffd9e3969ec95af171a07c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aabfb25049d1bf190b121e600ebae4b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a111af2fb798528a5ff21bba8b283a59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5185322deec9f899ce92da541275613f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aded3cd15ecd085eb59495cbbcbc65643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a03db77c39542b4f5d550292e3c667830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a73403a92fa919d81002e20aa80f7ce58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa405dc77d262c7ee07df7d7b64add798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2368d5ff5844a1235039540fb9740334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a498dfda7105083c6f204eef885290b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9353d56049d8ca57487afad9926fd396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a425f77529a2adcc4de8d5b1e82895bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aced98681c97de06acd5580f01ecd8744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1abdf3c2bf2358c4fcbd3335567a1099b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4b957b47597cb6745bd1244d009571ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a877f9526f084f6438499f0452d860714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a50a3d9368c11f3da21a45b9b4889fc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9040e8bccb109b6f8954d59ff979a50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a57810add8bc83097b199256cd4ae20c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae855f5283e779f49fbab7177d1339492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac4bc09b6bca2ec906dd416ba4a58db5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a591ca9381b41fa0e8cf5cdf53f8efc39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae561ff17e6fc79174c4d624936a5755b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae7679c58eec3a12708dacebffc1fb541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5bd8f599c2b769bee9d39a2ccd69eb29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a768f4c74861f8be89f6fbce8dcb9a52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9d3b10a88f50aae10a10a07ae0ad8c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac5cd8cb5bac4a54f48296d5968da47ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1650f5e38ab34bda08153d4b0e1de504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9ef6949c3a2938f998e83020145cd7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aac8df12ff080eb4b775c7f648eecf887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a65307534489be932526ef2751496db21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2184ccb06ac7382c7b050c071af50a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ade05af24f4905ad268ca2040c7240108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af792a1b5be1aa1d6cf8affbb6872d82b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a159c69c0a043504819c1360164bed061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a68d5a6b0005f2ccdf04555f1dc284ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9f8ab478bd87879c75684c66cd0072ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a73f4a33b3376da8783f46132d880928c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a92aa48e349226705cc876f7e7376717f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseWeightQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseWeightQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ade352dbd7e4217f29b9f1de0f46eb912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseWeightQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseWeightQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae6bb28e29560cb461deaf3ba310fd0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseLabelQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseLabelQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a80addfa8da37d8903079f145610bf622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseLabelQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseLabelQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9a6e1016ef618ec5ee5caa3442a60b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseCorrelationCalibQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseCorrelationCalibQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae1ea4e6952cbf2fbe8ef80de3bc52f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseCorrelationCalibQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseCorrelationCalibQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a79e46b8cd164e72902c86ceb38d0043e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aad5934acb3ddfd7ac430f85f46d66c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a061657b82bb0c4fb88dbbb1270785235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a283a2617c6c5fbcd6497a229c472b5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a13354b83069f1696dba4eb4613a5d754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae633977bea2e3ef4a33b68d3a09b0aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afb5c9fd9f0bc6aefca03b1e3ddb7df53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a624cbb17a0cbf911970f16bc178ffb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a02c70209191d1eee74d92ee1de8f7e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5f052e5821cdc69a97110771fb9e55f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3357fbea23aa13af9d62a9beecd505fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae28206a9d2a31bb82d137ab13cc080df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4c9a8f88f1c402ac9b9d33a612310ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3a960cb8760919993dd976814faaaad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1422af1f358a9060f3d2491d4dfba8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a172b97591a37ab37999686af6a34693c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae128e95f84b6f794ca0e25ef76f01d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab304e472f7c1b76d3c5ed1f8d93bcae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0f5aa20aba17fa9654dcff8564bf3002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a75c12af9c1ed619142d755d80eb9f6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7e688d9156605d6d64563632f4d96708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0112daa153beac232e9fd91ce8cdb491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6d41adbc3d4ffd42a1d565472fde647c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab270d01ade3984c38a16affcb6676465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9c004b06cfdf2ab13c680c5591212e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8cdda33d035a70ce91557b4e8687ef0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7b00bb0cb97dc748e5fc4048959de5f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5e88d3ee69e742b20683ddb1fe66dbd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a862376b133dfa494dfd0e58abc2775fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a20a6167e69fe21a5ca2f8610a925dea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a505d332cf5693d2ab97afd0c9ed9e7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae48f6f371b5f27eccb08878a96e5183d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae52d291bba79263a0d30a6bba2e81f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab2444dda09ce7d4a8d0265a5539b88bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a62bc9c17d1b97fccd7a687c6a8361a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa345506bcc6e52f160e99ffac5a2eaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8b7132c6583cda30a20a02a4d2e9a8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1d794a383c73ad1d6cb7947bc2b3eca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af2c1b4c9aa2c4ac5ddd21f5988cecca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a85094c830a97fa1660d63d9af675396d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8d28adf72f159d60538544fffcca6211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a86498c53b3859ca22b699469a504f7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a18f86b407d162ab00ff90d66715ec17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a65832f1b47e36926e6595aed6fe65ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a807bed099e6e9f4e6a19722aaa05e44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1add15b267e27052d4e1a73d2bce2c49b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afd5649fd75fabc796f9ec5c3edc1c53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a99a076d647df78387f1143c55793ff7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a914645a0827fa1107e7b4f0a8bf41b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aec9994f1579c66ad62a05ce0c19f0462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a082237c47967e76043475f51adc07917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1abcc6e4b117bfe0692a50d8c82e0d996f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt; empty::read</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9ce751ab836cd6ee6a3eff9e0dee60aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>return ss</type>
        <definition>return ss empty::str</definition>
        <argsstring>()</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0354c92b67604a299bae2a818224fe76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::wait_until</definition>
        <argsstring>(typename haldls::vx::Timer::coordinate_type const &amp;coord, haldls::vx::Timer::Value time)</argsstring>
        <name>wait_until</name>
        <param>
          <type>typename haldls::vx::Timer::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer::Value</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified timer has reached specified value. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>In favor of block_until </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer coordinate for which to wait </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer value until which to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab49152e9f81ade1284a5824b01f03658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aff6c6dfd74b9ada05dce8df00da14bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9fb5a71878e84b04e29ba4ce555bc40d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config, haldls::vx::INA219Config const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7d34bc62a42c1b42487783178ddb31e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config, haldls::vx::INA219Config const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae5f663bc2d25e64677bee24013140540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5a23204e6711df1d75c9e27c684e27aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a58464030adefc80807684402d64425ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config, haldls::vx::INA219Status const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a745174565bea2d7b7ecdbe925f05f393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config, haldls::vx::INA219Status const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae7728050dbe92fdc87ae42dbb34d18dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad198d5e6e802e7e88f772cf68eadf2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a09611117ef3a961ecdfc9f695cde85ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config, haldls::vx::NullPayloadReadable const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a05763a6c5519e396373e45641a0fb124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config, haldls::vx::NullPayloadReadable const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a914ffc73f597eb0f4ad1c8a49cd7b88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a491af74850de5a7b86afc201fffb1037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a68c122abdc79159586daa05a6d91198e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ace0e749180e8c2dc2846bf1908f25145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a61c6eb04918084d0a730b1374ada23cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6e93eca05fae9ad3a8ae561394594366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a42b458e93e7a772fb8f8f33eb2b47947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab98db79f95a2dabde2ce1dcdba78ea00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5ccf4311ecb4143d6db167f175e98369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a829a3a5743473a991477455f299fe744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a11d1a62fdb6ed621abe4af70a372f0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config, haldls::vx::NeuronSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4d5d4c45d3f0cd0d3857704505b14785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config, haldls::vx::NeuronSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a85fb56af2f923ee95058d0addcc903de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af104b722535944dc34152b3c3518279a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1077e960d25cb2da48d090b1a9890cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af0b77870e4ad4bae917b94a9ea2c75f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a622a7965b3d6344f98eef9d48b69972e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7723ecf2891b7db0477b588b7250816e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae88578b9074099b55f444deb23f6f169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config, haldls::vx::ExternalPPUMemoryByte const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9249e71dec75dbf46337bb3a987ad679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config, haldls::vx::ExternalPPUMemoryByte const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa20cbd99aa576d838b00c99df7ba5d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aec29db4f5789dc910b2401a98907251c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae469ae492bf5fa27f6036a049fd12f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::NeuronReset const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a903426193a9a6a4a3e03a75739cc00f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::NeuronReset const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a08fd4c70e0d0c99afe110746f650e1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9a421e8aba1ff00a8dbbc042e893d30e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa65ef4ecc91fe1b2b579982f00934522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::SpikeCounterRead const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a62af37a950a2dfbe51a3fcc1c73ab412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::SpikeCounterRead const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6cc26b99a43135c91f608c3980e0819c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab4b896e1a3e604abda05465742c3bbef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a82275f42d45f0d753df5e3ad3106d9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::SpikeCounterReset const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a95f1d226d937f7ffd4caccb8b2d23a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::SpikeCounterReset const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1452b01e2431ea64b9997efcde3cf38c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad77a7e6e8d6130fbcb5907f016dc2ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac74a28c3e64603a10349aa013b95ace9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::HicannARQStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4b12a306d0fecbcd280c5a99301b5c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::HicannARQStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af932cc97fcaab5e81d9192fb21028393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac75a221eb03f94932fa7d2bbb676a6a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a79fe7570ccc7df40bfc5eb463f07bd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::PhyStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8f95201631a1ec5f9e2cdc7e1c6dbced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::PhyStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1abc8d695c04236b14199bd600a74cfb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2bdeb4d11d6978f251943a06ca490938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa5c0a1992f0abc8db2cab025400250ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::PPUMemoryWord const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1acf6dbc6bd55b43d5d2429c3ad1959775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::PPUMemoryWord const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad5aa15005b1a929a7b51038ef0d2324a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab3aa19ce67e96b00dbcaf9abdecf1238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8bc94169b6936f9c3032df8b47fbdd13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::PPUMemoryBlock const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5fdf8166f6f41de1b6f229dc4695707b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::PPUMemoryBlock const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9cbea0b5f73fea9a75f9f7c1d51c33d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac4c48721e0473759bd026d7d5eead3a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa6b59b808ede389459a981fd3980a53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::PPUMemory const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a99702cb91adfb25d2ca5bd25b541384d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::PPUMemory const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a89890458508da49ace3dcb44d0f493e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a72b29ff350542be3251a921457ac3afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8bcb6bac0381e14a09469eda7e0d8f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::PPUControlRegister const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a936a28c2b45ea436b603dd2a1a5ca0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::PPUControlRegister const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af17399926287e0651963e5e62615c0a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a944ce5711b13a6f67b33d6ded3cacb65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afea84a0f1b0af0c212c7974e69bf58ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::PPUStatusRegister const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4b27cee566f2f6b6b62d139fea5b8e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::PPUStatusRegister const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a98ec8f8955b900fd29c3e1b80b7ea1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3b474cfa05ce5344469a9f42e9c12815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a24662fe8d75a178c791eea39d33d6370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::ResetChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afb5e785e0ff08fe930d274ae04b12b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::ResetChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab7b861d6e92915bb98237edbf227ab66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Timer const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aaf52ffd069ce275bcc487f5161ccd244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a799edd089f7cf940da2c2562e16a4722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a30240c13c4c59b5ec80556fdaf7d953c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Timer const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6767599779590bc3d10e6210db509562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a139b86000c10ae706ff6a36ae847a23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ace79140c6891e0e369fe335bdd0f8b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::JTAGClockScaler const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a72e372d418c71301d4a6759881b5bade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::JTAGClockScaler const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a23c58f224a5f46e0b9efaec4a8ccfc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad332efc42048616aa79155aa066b8555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a77921c12d41014afab03395248de9d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::JTAGIdCode const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a973d04af932da59a7107927ad6933097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::JTAGIdCode const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a462f132e00a6bd2103e3527333d0546a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a665575cbc973f4ccfbc503e7df26c0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a23ce703d8264d532368ead32c24b97cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::ResetJTAGTap const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a447c63663be59b5ce81ce4877ae8bd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::ResetJTAGTap const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad3e7030bd36549674ca4c1fa3eb5a4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a880b6d160952d5498e59047bd6ea0fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa8714fdf6375644c78fec5e9ae7198b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::ShiftRegister const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a58229236eaecdf1d67f771fb62202e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::ShiftRegister const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a30e2d3e3510cbba47f529c59936a0397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a772a076adf665085c722e1691a0cd76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1abd4396c326d38c1f44f5fe92823b3840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::DACChannel const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a61546ad09b0980aec2e79721d5798251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::DACChannel const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1c3982a6c52f54776f2a064334173ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0f5f7659c946d78c7655a4f808f742da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a910a4e0ff08fdc664b3f7cabda6eae60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::DACControl const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a86599ace0c4c324c4528b0904865c7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::DACControl const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7c3ff195674546b1e1b9727fc98c3e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4894bee1cdf07f36891b3c9424c6c1d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1ad07522d6edf3bc0fe3a07568b5204f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::CapMemCell const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7e65c8c74cbf5c0b6449afc54d4458c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::CapMemCell const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac9944babcd880f9e86abc0cb0145a42c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6bcd444a1e8c0e1432ec61a99502f18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a119772f739b440428f2b678333d59211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::CapMemBlock const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a09e0b6b73c09499b5b732da38ae35151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::CapMemBlock const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2a3925f82913f1f0fb6acbd9254d6929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::CapMemBlockConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3b256cdef0c5d958eadd3151ef63ee1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a24101a0a6786139031f6b4a29c0793ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a25a37c51010ccdc0d046e35c50d6a7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::CapMemBlockConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7154a88a004d9a4c13e363950e768861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::CommonNeuronBackendConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae163d66134db4a6bf5a9cb7016bdad0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a46a3ce092a427ba2e653d6fd3a49e8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1acf9ea70cd457a2f1e3a959e6cd605426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::CommonNeuronBackendConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad7aadbbe35aa981155f00fcfe974782f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab45aeffeb7c19894fe8bc9220bc60239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::NeuronBackendConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a54f18c2d79bd9173de03047427410108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa2f93786a01272d9430d633141e2e787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::NeuronBackendConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae8e193ba1151c6de9ae3135677082a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa9b713c031c6bfac6704142406807281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa0752f40599a6da5294b9fc5f0e11b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::NeuronConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4708388713710dc3af5d276630e6ea0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::NeuronConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a26b499dfb75207da7b052829b535abe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::SynapseDriverConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab79b069a8051ceff6666a84b375cf50e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9c11f3c5682280db5b12cf9fd5b47cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::SynapseDriverConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a94cf45814622825353d21ad3d920de74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1acc869fc2cd9fd6fb8ab5e6bfcd3d20b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::PADIEvent const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3a974f6f4288fdf3a28f747819e0aa15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aad828b79f0926308acde187eb012d0b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a65a5a0d1194dab01c6a011d04126adc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::PADIEvent const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a490728324921ad7cfa11cd1461b6ebb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3b6fb1f5f45b57758cb62d12ca82ecc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac8cba8718ee4bda44e8ba58ec4c7f659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::CommonPADIBusConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa10f0b4a929f3445c7cd000b23bb61f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::CommonPADIBusConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3fde864155e783b4bc5d0e1e3b58d141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a763e35d22a781cf089f7365143a6a2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::CommonSTPConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a870ca2cf60b71b48058fedf6f3e20f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae81f84eb5c296ee664dbf6f61bd30642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::CommonSTPConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a91672550f8e89d273fa3343a6026300f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::ADPLL const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a029254966ba24cfc8623936ddb265695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5649565980d69ae47ca7a6ea64775aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a47a62e1fb6ce13df649c39c859865dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::ADPLL const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a528fc253d8d2b51e79b1e4d990fb48f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afb9ccdc47e75c98f875cc6210580279c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::PLLClockOutputBlock const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a734b85d4b12389e98e8aeec1de1931c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::PLLClockOutputBlock const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9b4258dbd5e620c9cd021925135394b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1afe36fb7d04b65f78efea9b7c261770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa72fb2804b9b311b7e32878bc56ed8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::PLLSelfTest const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5acebc6e05b1f40a4c0809da9f37becf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::PLLSelfTest const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a69630568509fe1ee5362ab01ccf71b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a319354b4651c7c48b20accc09ed735a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::PLLSelfTestStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a60bda73d42eb2c152805fa0da9741f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8e65fbd0fc56c9e01aba1c75e2a004ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1afe7102c39cae6b84e0d89673e56c30f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::PLLSelfTestStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a791f89bbe06572d8cfef209f34cae0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::PhyConfigFPGA const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae9d70478516086a649d3f997d45382d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::PhyConfigFPGA const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1cb388e4ca00669ae20c128e37a0fb08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1abef9dca90523412522e04aacecb51412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1acf8e16ae4a73a9aac07b40d4948f31b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a934ef9c5170821381cfa32ed2847e167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7ddedc2d6fe74822bca26ad4ed2af240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::CommonPhyConfigFPGA const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aeb906be1f276f04bee74e0e4908e3028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::CommonPhyConfigFPGA const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af9b133a588dbf219e7ddcf027503c8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a14d60f067a90986b692d443532bbc406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aca5fea41dd4299b4c84d03d85f3ee4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::PhyConfigChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4c8cbcbccc89e3d73373c2cc141969b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::PhyConfigChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac6128bbc431eeced9c695b14f1930049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a48594e393f1a8f7577e85cf87f918682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6f4e017ff6945682f2745a8b9a11dd02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::CommonPhyConfigChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af2e548d1e6780e9fbffcb847ce8867b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::CommonPhyConfigChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8b6e508fe02256273cc9b355b44f040b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7fb58ea8fbf3671c23a9fcc5ee5e1126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae2db367fb674c786de2363711649b58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::PerfTest const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4549be0c13503e44f06d8a080eefb595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::PerfTest const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a52510e7b058a3b065c4b7783102d718d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a189caadab71bdc33f55374d8da265530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae3efff977bd2776cc7effa6e7eb0c6da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::PerfTestStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1abb322f729fe26edf4f28be107c12f56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::PerfTestStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aae3c11d892505769424d7b70b1779c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::SystimeSyncBase const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab401728de8751d4203c22c0a0f09dd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aaec83e1835dcc62b92dd5750f4719c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::SystimeSyncBase const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9093f49a523c98299d11dc756039515c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a590d1f89fb4004f9174d326dc012edc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aebe473fba48182f33c656cc15349a272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7f8e0382e32b8453fa11b4eb48e7e8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::CommonSynramConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a979a538308f3bc21c382eaab33d216b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::CommonSynramConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a724d36eb417e2d183015878eabe9d22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a18d4ec57fb1f960acdcdb2fbf6e1ddee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::SynapseQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae20322929a67214a85c40d02eec0cf45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::SynapseQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae853d7308e8532510a7d967d0495b95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0f93166808a42d176524e0671c05f5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a110e288b9c5d64257787f53a4a9cc912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config, haldls::vx::SynapseWeightQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab093a4a2d97635c5aedf8c10f463d116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a45de334663ee18914092298d972bbeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config, haldls::vx::SynapseWeightQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad17281349c20052795e7ec68b14fd2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config, haldls::vx::SynapseLabelQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3a89957d3b495bff0eeae5dd11f16323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config, haldls::vx::SynapseLabelQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2af08a59663da653de52c3b85fd1b7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a286c20b531629a375ac3fe8c21e08a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac15b5c20525694e9bb1b7ba564a48e48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad455dfdd38dee521df5bd2f070160578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a683ff1b3426b2f596277fa78b84b07f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config, haldls::vx::SynapseCorrelationCalibQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a22374cd779e9ab9e044d96317e35a46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config, haldls::vx::SynapseCorrelationCalibQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5e6e9c995f525c7f2bb3a2da47e6d5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a101aa9b319d9bea95f2e14dd95fdb471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a266ce44c557e9e5a9a9347a715baa4ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::ColumnCorrelationQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a76dc0670ad26859b45f146dfe3a2dd99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::ColumnCorrelationQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3ba33606339e9d0b32d66d8a0892c4b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::ColumnCurrentQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a072fd88fb3e99d81a370fc669ee8f1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::ColumnCurrentQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae23cce524d09fc5f962c990c947a54f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae6b201530b01dbf3153ca158ee8bb7c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a830fcad387f3dd77d790ac1594158bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::CADCConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1acb562eacc0ee2bfbcad7b1e89a20436f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::CADCConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a48e5f26576a21932e2d28adf6fc69e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3db61ac1eaf8a08305942e646f3da3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a62de0a376c3825e1115e799817fd013e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::CADCChannelConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a58b9cb119077119c100d7d4f81e5c9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a757f3d466180e8c9474b2414cc7b8983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::CADCChannelConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9d71ff36aa87c89369679063d418196f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7afba9b75d76cff39e97e799531d0d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::CADCSampleQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa60b253299e7d585b0db989d996d93fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9c524c6daace6b9f29f5eee7e2cab3aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::CADCSampleQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a03b80d9aae13e06f7c8263b0da620726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a29b8c5d81f80832c815c89a53b97d3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aaf237e82f8f829ff26c142243f7768b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::SpikePack1ToChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3424e794cf93f3befad0c72a2493fd4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a20b3dc9e04fda05ad4a090eb2e80d87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::SpikePack1ToChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a398790a9289825338abc07ced779cf44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::SpikePack2ToChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac1007955d4be8de0edb5f474eb46369a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a116ec84cdbde79d54f35a79b82f75668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::SpikePack2ToChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5f4fa8fc0cd93a326886c61a6dbf2784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac9761f1d5648694eadc85a96ec63cece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae6061f2b7887432c80f5120c1498ac93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::SpikePack3ToChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1f811d51a80dd1b11276adf8b0fccdee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a4106e3b1ba8c88bb753c51054296e86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::SpikePack3ToChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af0bc6db1f1a78b780e347f6c3bb8602c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5ede8ba054c37594fa1d6527ab3b33fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a61ab8ed3663d94e7d4b732da991d3537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::FPGADeviceDNA const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a388576cb03cab2006951ca0e760c42fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::FPGADeviceDNA const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2b7f022f4424db98c5dd90ce25408946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::EventRecordingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1adfcaa63fbfe2f7c4b7be2975e6d1b80f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::EventRecordingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1c5b2e42ce892a590946f61853543a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aea34c913f8ead0368f171dd9f5ff99b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa3a4326059a63fbcbd0c1b907189dfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::BackgroundSpikeSource const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a03539a8b426db5f72537d1c08f2cee0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2bd62d5b2c256ae5c2f71afe1c4d34a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa68b603af8a52f50ffd2f6f98b49cb0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::BackgroundSpikeSource const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a6e9c7d5b5137bbfd33dffe250df5b12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8386eaba59154fc80ac322d978efb906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::CrossbarOutputConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0af1e05396e13a33542c3cd29a32d18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a63d9126e4a3f2d8a9da352542e8c4356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::CrossbarOutputConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af389a3815081810fea331159da89710f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a39bfe86c290c38a2573c5117ea81e3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::CrossbarNode const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3245717b781a4fe1bdfff07916f71ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac64f27d53327761da071fdef94c6a380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::CrossbarNode const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad40b89dc8c278dadec8fb98ce43834ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::CrossbarInputDropCounter const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7e4cecc4e5b671aa54a68edffab76abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a313d2132650a920bd4b29c764dad0d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::CrossbarInputDropCounter const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa43645122c8ce0bfa902ea776f9e6f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab97ca0bb9ca00c22c53fc4154fb35ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::CrossbarOutputEventCounter const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2953bcba6add9ef9b4bda64b2f519cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab018e7000afbd36f7e01b6b915a6797d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::CrossbarOutputEventCounter const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab592c89d74036d599d9be9dcd98f9a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a08ba27debb2187837d8485cc61943014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::SynapseBiasSelection const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a2849dcf4a09b4ea437dac9790aef0a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a51a92376881ba545b2e4de13c61a3efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::SynapseBiasSelection const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9e7b42ce4747b87073b33c3ebac18bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af1c048f379b799e24a4ecba5902b8ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5ae64c1b9e647bbdeab796cb7bd47eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a42426123785192b07547e30c96689fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::ReferenceGeneratorConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac2b0539e58d48ce97d440352f26f8e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::ReferenceGeneratorConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a8dc91e4471cc6dae9140c40fc0bf13b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab8f6b1a5deba0888945499a59ec72dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::PadMultiplexerConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a7e5e6dfa77afde8f7d37b5209ab3e2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a24ef4a249f7db6742cb2779864f7884e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::PadMultiplexerConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae37a0a6cae0cf8aa2a805b9832b76fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::ReadoutSourceSelection const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a20b8f8bae18e5a74c9d81f54df66e51c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a32911770d7a4dfcd89ec6d14a4344859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a0ef98ed787dcf8125e99bc228771998d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::ReadoutSourceSelection const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1e5339fa88ba5f4c19b9840d69b8bd96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a94360f6bca34f50a26bb379fc9e0108f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::MADCControl const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af7bb4191d81d611cafde44b78f4c3286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a83129c78365cde28984ec999cf2f976a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::MADCControl const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a112ecd687dc19bc32a75733d66a0b30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config, haldls::vx::MADCConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad286b7854f0474edf84d0a5751186d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae0b3385773b07722838cce847d46b2ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config, haldls::vx::MADCConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac4716911bcfedc46f04806c1f5558abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5a810e629a1fb6f55f9262b2aad8481c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a01394cd6c4557ce8ad50ec0875b28554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::CorrelationReset const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad623b0080cb4ee30237b2bd489d2b706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af713495b7934fff23e99568f2b13d149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::CorrelationReset const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a752d0c2a2db1695f1e61e05b34300e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3baf4ef4a78119574432bb206662ea52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1aa8e628b7181bc4ed2ced16a72d17e99f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::NeuronResetQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1add8db5b743b368b8ba32f13eefe295fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::NeuronResetQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ae88c71b4bfe0735f9015d93b26bc7531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::CommonCorrelationConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a1e36aa339ce0741e5e38af342989a283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad343639f27d589ce1a15f8440783b859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a9c9607891b10c6718503470e8bba2577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::CommonCorrelationConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ab7e03b226bfa01002b947b3ec33d9b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::BlockPostPulse const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a587b2cdf204e2991579edae24cd3730c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::BlockPostPulse const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a5ebc32f92458de7673f2519cd7e2ddfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a3506f34944eb89dd1260bf1bba108f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1a10bd49600d60374fc504e8097957aeac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::SystimeSync const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ad7b66e13bb8ebdbf0d14b3228c483fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::SystimeSync const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1af98b00a51daec23ebb15e92b466a69b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="playback__program__builder_8h_1ac7686438272cd820a88d5530e50b1a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h"/>
  </compounddef>
</doxygen>
