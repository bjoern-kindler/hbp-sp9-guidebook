<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kind="class" language="C++" prot="public">
    <compoundname>stadls::vx::detail::PlaybackProgramBuilderAdapter</compoundname>
    <includes refid="playback__program_8h" local="no">playback_program.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>BuilderStorage</declname>
        <defname>BuilderStorage</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>DoneType</declname>
        <defname>DoneType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9daa21188f981e864cead70109dfe0e5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::else</definition>
        <argsstring></argsstring>
        <name>else</name>
        <initializer>{ 				ss &lt;&lt; &quot;PlaybackProgramBuilder(to FPGA size: &quot; &lt;&lt; p.size_to_fpga() 				   &lt;&lt; &quot;, is <ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a54786dbaf7918fea56f9cc2a2ae56f76" kindref="member">write</ref> only: &quot; &lt;&lt; std::boolalpha &lt;&lt; p.is_write_only() &lt;&lt; &quot;)&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1a8b417aee8b75e551ef05de20082f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::PlaybackProgramBuilderAdapter</definition>
        <argsstring>()</argsstring>
        <name>PlaybackProgramBuilderAdapter</name>
        <briefdescription>
<para>Construct builder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44bc80ab776b7ac07cc4faaeb7427071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::PlaybackProgramBuilderAdapter</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;&amp;other)</argsstring>
        <name>PlaybackProgramBuilderAdapter</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a052b384f446c75259067d3918e70046f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::PlaybackProgramBuilderAdapter</definition>
        <argsstring>(PlaybackProgramBuilderAdapter const &amp;)=delete</argsstring>
        <name>PlaybackProgramBuilderAdapter</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a91803c39ff5ffaf50875f60fca2e6798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::~PlaybackProgramBuilderAdapter</definition>
        <argsstring>()</argsstring>
        <name>~PlaybackProgramBuilderAdapter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a49f942d3e293c5cc42c86054c82ff424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::block_until</definition>
        <argsstring>(typename haldls::vx::Timer::coordinate_type const &amp;coord, haldls::vx::Timer::Value time)</argsstring>
        <name>block_until</name>
        <param>
          <type>typename haldls::vx::Timer::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer::Value</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified timer has reached specified value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer coordinate for which to block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer value until which to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad06a8c758af8acbb5bed054d5907b218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::block_until</definition>
        <argsstring>(halco::hicann_dls::vx::BarrierOnFPGA const &amp;coord, haldls::vx::Barrier sync)</argsstring>
        <name>block_until</name>
        <param>
          <type>halco::hicann_dls::vx::BarrierOnFPGA const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Barrier</type>
          <declname>sync</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified barrier is completed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Barrierhronisation coordinate for which to block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sync</parametername>
</parameternamelist>
<parameterdescription>
<para>Barrierhronisation value for to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a74a2b61f7160eb22f930fa8336cb20e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>if</type>
        <definition>if stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::constexpr</definition>
        <argsstring>(std::is_same_v&lt; std::decay_t&lt; decltype(p)&gt;, ::stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; ::stadls::vx::Dumper, ::stadls::vx::Dumper::done_type &gt;&gt;)</argsstring>
        <name>constexpr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a430ebb8b09566f9220ce7c78e6656597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::copy_back</definition>
        <argsstring>(PlaybackProgramBuilderAdapter const &amp;other)</argsstring>
        <name>copy_back</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy other <ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The copied-from builder is untouched during the process. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>On other builder not being write only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to copy to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5eda21e8646e0cf274a5d8f61f8a1258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::copy_back</definition>
        <argsstring>(BuilderStorage const &amp;other)</argsstring>
        <name>copy_back</name>
        <param>
          <type>BuilderStorage const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy BuilderStorage to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The copied-from storage is untouched during the process. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>On other builder not being write only </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>BuilderStorage to copy to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6388a5b73aaa382e209b4c5adb4921cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>parent</type>
        <definition>parent stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::def</definition>
        <argsstring>(&quot;__str__&quot;, [](GENPYBIND_PARENT_TYPE const &amp;p) { std::stringstream ss;ss&lt;&lt; p;return ss.str();})</argsstring>
        <name>def</name>
        <param>
          <type>&quot;__str__&quot;</type>
        </param>
        <param>
          <attributes>[]</attributes>
          <type>(GENPYBIND_PARENT_TYPE const &amp;p) { std::stringstream ss;ss&lt;&lt; p;return <ref refid="playback__program__builder_8h_1a9ce751ab836cd6ee6a3eff9e0dee60aa" kindref="member">ss.str</ref>();}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a30b97a4efd768bf74f1742ef7d470692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DoneType</type>
        <definition>DoneType stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <briefdescription>
<para>Close <ref refid="classstadls_1_1vx_1_1_playback_program" kindref="compound">PlaybackProgram</ref> build process and return executable program. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Executable <ref refid="classstadls_1_1vx_1_1_playback_program" kindref="compound">PlaybackProgram</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a11aad743b06f6c8a3f247012a1096f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::merge_back</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge other <ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from builder is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1aa7a7fa3a5187bf9569b0d66757763c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::merge_back</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;&amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge other <ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from builder is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Builder to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0a6f0bc71d627b22c20d2d0e3d648127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::merge_back</definition>
        <argsstring>(BuilderStorage &amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type>BuilderStorage &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge BuilderStorage to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from storage is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>BuilderStorage to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a380451d4397c2f8cb3b7635def24427f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::merge_back</definition>
        <argsstring>(BuilderStorage &amp;&amp;other)</argsstring>
        <name>merge_back</name>
        <param>
          <type>BuilderStorage &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Merge BuilderStorage to the end of this builder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The moved-from storage is emptied during the process. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>BuilderStorage to move to this instance at the back </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3f627c67bad6bbf815c885e5ac2e6663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> &amp;</type>
        <definition>PlaybackProgramBuilderAdapter&amp; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::operator=</definition>
        <argsstring>(PlaybackProgramBuilderAdapter &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5d14cefe08a1936b5f528b2bc5f2b351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::INA219Config &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Config &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9d180099274decd3acacb194fc67c1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::INA219Config &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Config &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa210a2465c89f320d4fba19854143787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::INA219Status &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Status &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a62845a17ba74fc8016c5f21284cd4547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::INA219Status &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::INA219Status &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae99727513c79ef5ff3bff00662eb149b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NullPayloadReadable &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NullPayloadReadable &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a412d90b57c063014fdc27d13bd89647c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NullPayloadReadable &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NullPayloadReadable &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9c1cc6d9e7fbbb5da1e31809b7bee91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0f524dd8a5d6fc6908ec82f09700c3e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCOffsetSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44639037d1213bd66ed5e6e0a828407b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a03a609f230d5b27bbb0959cf1e237648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aedd997a4584de2b6dc49d9d2525f88af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a11979fb7cdde9233ee6e2087cceafa8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9d8bfc011c3f2243da01d573a555b5de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aec88d05326a878ce7a07fee3435e46d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendSRAMTimingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3b041b88e238b5145fefa6e1471a3643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ExternalPPUMemoryByte &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ExternalPPUMemoryByte &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abe585ef42102577432e8f00bfaa2f27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ExternalPPUMemoryByte &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ExternalPPUMemoryByte &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2a37b72c1e611175ced925a1e2806b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa36c035e21774c891d8b44a44bcd5daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronReset &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1940addecc023bd48e9f5a7f63e38cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterRead &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7600af8103d6824c4961408c121c78c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterRead &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterRead &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8b3a68a5f685bf2781b9c3f50129642f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aec5a0341bc5eb6881c7d3b0a22af875f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikeCounterReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikeCounterReset &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8a89df0f3bde4d5aa6e77307815bd5e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::HicannARQStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a40798ab6a349dc4026aa7fd89f63270a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::HicannARQStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::HicannARQStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa774c27c609ff5284de31af3c6a83c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af094ec37503f89a8b150ddc6114a4646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a151cd2a9380924aa80447224388a5025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryWord &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab3017693fa8ecfad515f7b590e919d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryWord &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryWord &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a16ce23074190d7da9cfb2bddd29054b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a97a99d9c4905ed7c43dd5c475f30d951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemoryBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemoryBlock &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a14ecd722077ce60701413dca4efe3793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemory &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6126cf680099aa955e17650c2d663430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUMemory &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUMemory &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7bd41f8ccdfdd6858abc24e985c20593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUControlRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a09166f51be1628a32e2f33c93b237399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUControlRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUControlRegister &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6287a09327e4c64426a65cdb816b5730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUStatusRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af173adb7bd03ab6a403c98ba09d20f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PPUStatusRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PPUStatusRegister &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a42853550f9f4c99945fcbb02fa6852cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae82ddc6d2e8ce07d3654a9b2e88e28a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad8ca5c1d66e913ee1f4f9f5464a408f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::Timer &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6d021953b6584aa2c7532273138a71d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::Timer &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::Timer &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae6bb3a2f0285dbbee644152fc24b7976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGClockScaler &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac362022f0c563206ece77341842c2acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGClockScaler &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGClockScaler &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aef3be1b9385a30f8151fc86fe5267a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGIdCode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a25b49080cb2657c018e4f570e0986b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::JTAGIdCode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::JTAGIdCode &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa6c3de7584d01f05be1b2e7f95af4055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetJTAGTap &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a66840acd5a831518c4a23dc6acbdad82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ResetJTAGTap &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ResetJTAGTap &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7a48c4f61c9acea03f67cabded09a553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ShiftRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adda2b7bcb481cf6b3570e401a21ec7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ShiftRegister &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ShiftRegister &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2c5ed64f29a9bf2192a333c3ee6f526e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACChannel &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab12a45bfddaf62e4bb40d281a015e862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACChannel &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACChannel &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa85078dba388e1ae53fa3ee6e44cd669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1bda86696520c8d10b6574faa02151bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::DACControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::DACControl &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af1ed4fed9f21f936aedb34f3e958265e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemCell &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a94d6198900cc77ce028f6bba4665f56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemCell &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemCell &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a91ca553ba1e0459a015a084f9f2eecd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8f319047d37ce526d7e2861d0782ad90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlock &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af8ff7dc22477d1e7b7323e82adb6156b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlockConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7c9c45b3e0f552bb4b9142b6a4142c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CapMemBlockConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CapMemBlockConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a37b046f6b27efad0badabc34868ad8e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonNeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a336070396dde99762bca4f314784e022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonNeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonNeuronBackendConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6cebf94df8d1f4cc8bbd77c802f8903a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1affa0879722fa3e2821b8679732e349e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronBackendConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronBackendConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af12a747c974e5e7779c1e0995471a663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6cd6b71ab9ac73888c05f01f838fe8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9bfd1396addabc0a8362c24ecac9caa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseDriverConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8390b472dd4c28fec45bb7c2b18a8820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseDriverConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseDriverConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a25dde8ab0bc3451fffede95cc636fd49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PADIEvent &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5e99e29feae454b6312ffad8505b637b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PADIEvent &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PADIEvent &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0a6f6b84622a2405556d81c122e93be2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPADIBusConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aedc26d6259ee94753a9b0f3cfe2a6cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPADIBusConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPADIBusConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9adf69934296d2f0bf6d0117aaea185e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSTPConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a72a43f84912099f3efa261e8fe629563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSTPConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSTPConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acda25c7874dd5963af556618f25c048e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ADPLL &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44f6b51746692a128ba8aace835f6741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ADPLL &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ADPLL &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9e055df349b8240ee2abe9fdd8cdecd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLClockOutputBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1c7f8a076049e4d9fa27ed697a269863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLClockOutputBlock &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLClockOutputBlock &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abb7a7a0d424394cf44b76012eadaf988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a740ea13b17b912403b87482a934a0c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTest &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a66448833166d29199b1c968dd9b5e0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9c47780bf5cd825d93c8d7c132f841ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PLLSelfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PLLSelfTestStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af52bb140b1ce8a03c88204958dafb1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1da1f45cb80249fa04b0f0b76f35602a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigFPGA &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2bd5b166d662bd94fc3fd58a4242970c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a468dd1ec128d1eb32722b2569e0e4d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigFPGA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigFPGA &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7ac84947fffedcbc0abd28c3d506a07f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a74c554ae15d02fc5e436bb893103351c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PhyConfigChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4952b38521bea16a5066d7901e87400b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aadcbd0e25d9008a31e36d690a68daabf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonPhyConfigChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonPhyConfigChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a95eeee72dc92429b23005c01d853bfbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad07c48f7ad0eccf301a8972555221794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTest &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTest &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a287346f2c2179c0771158a555143f6d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9d6e99cc2416a9cfbf07b8e869d37309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PerfTestStatus &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PerfTestStatus &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0232ef4dbbd53d28b56e852881a35f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSyncBase &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3379f75d88293fe317c7055b29c707da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSyncBase &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSyncBase &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a797dcb2ac0dc5b1861ee042b17151361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSynramConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abc3d0d32373e495252f7b25daa0a2f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonSynramConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonSynramConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a82d735b57c641021715010856db3be01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2404294a73fb74d3816eb90a0c697eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad578656bfd949a0cb745fef9bf68f2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseWeightQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseWeightQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad417753d4090b251b3ae7e6291d23af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseWeightQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseWeightQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa89d28b2d6185ffbca41d238848805e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseLabelQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseLabelQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac212ed249857b502553c42866c83cfac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseLabelQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseLabelQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0933e7c96f20dbec73b4517919834534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseCorrelationCalibQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseCorrelationCalibQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae40cc233a391df353fe332afc3088705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseCorrelationCalibQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseCorrelationCalibQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5ddc34c991ee22fe01ac6a7713dd0a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCorrelationQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a031e7911dd3d8cb2bbba7ff8a3451016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCorrelationQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCorrelationQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1427adbdac2d27695c5d463a7d299feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCurrentQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac9bfe203f2ed816deea860def77b4235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ColumnCurrentQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ColumnCurrentQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afd5214f0577afa4aa8eaa39d9cd7bd46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab0f6368d9903859d7455eb15e5acfd5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3561ad5a55ac14a9f8d40894a820c0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCChannelConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a49f987af4a1e1825e6a1809b27a2114f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCChannelConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCChannelConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a75dde1816c26fca83ee00b3e52bd05ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCSampleQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aea100814be7821bb43877c56bdbdcee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CADCSampleQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CADCSampleQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a61669b02775e6eafb2ae85e6b64e5db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack1ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaf5506bc23c89a76bed7b4abc7a85317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack1ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack1ToChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac3e369911669f5bdbbd3fa7c8b17df23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack2ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3754928e239f7bb41756296bcac9fcc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack2ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack2ToChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4524d77a49fe26c4a660a1bd6858c00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack3ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a24d3d7b9dab686bf7325daa8bd70c954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SpikePack3ToChip &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SpikePack3ToChip &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6c031e097f04b2ba94e4052b0fe7cd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::FPGADeviceDNA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad2871a181f2f5631d4060d17d0676d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::FPGADeviceDNA &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::FPGADeviceDNA &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7016fe374d4e61ae3c9374372cc0690a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::EventRecordingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aae3fa2acbf41669844c18f25c0a2524f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::EventRecordingConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::EventRecordingConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a82f7828e44cd10b69da0889a6cac5eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BackgroundSpikeSource &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afaf5ed0663a63d0f950d31152a68fc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BackgroundSpikeSource &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BackgroundSpikeSource &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5079f8486a53b23a07dd5d624fec4f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abc61d516b6a0f55e59894f34851ed53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abe0038c52d00e0fa3c6b23d81f2c0753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarNode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aac78427cdc8b398055225226d2cdfd13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarNode &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarNode &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aeaf20657cca25664308ffbed4dd972c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarInputDropCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac7eb4addb383a340cc0d548b79d22657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarInputDropCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarInputDropCounter &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2a9f39a4165d3837e1aa8486e9e94f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputEventCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2782de1b068f622a0f80e64df479b99f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CrossbarOutputEventCounter &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CrossbarOutputEventCounter &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acd28560cd9e1f1607f8ad1154d37378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseBiasSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5d6b21ce08a6ea2ae9c28a500cc5f719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SynapseBiasSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SynapseBiasSelection &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a227e40063bf1ded14d509d4dda875340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReferenceGeneratorConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad1cd4349e4a6fdcf2cdaeb7dc69a482f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReferenceGeneratorConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReferenceGeneratorConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad572d8f94c5f4cd93af863b8d6cded0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PadMultiplexerConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2e3adf8c1a86a23ff452ed3180f3f11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::PadMultiplexerConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::PadMultiplexerConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8ee210bb80f3d8532d1a7eaceef8934c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReadoutSourceSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a50197290b965361dd64c4fd03d4a3320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::ReadoutSourceSelection &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::ReadoutSourceSelection &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a41dbf0598158093288c20f59e0b43662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::MADCControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af6ac7c6b829422af8542799580918c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::MADCControl &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCControl &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaba226078b3b70ebd11122512cc210eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::MADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3f3aba5c2b9d0d011eb471832de5798d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::MADCConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::MADCConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af4bc1fb5932993fb530e11587c541a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CorrelationReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a951aa5e85994275037c6158ebdba8123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CorrelationReset &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CorrelationReset &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acc3b7c31dcbfc39f1a6c9da29baf12de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronResetQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0cc72d3f21773c56015fba41537a0cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::NeuronResetQuad &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::NeuronResetQuad &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a40b4dd1d01b8c9174d94b6b53e68be59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonCorrelationConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2f3f0f92ae85440dda36587900caa1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::CommonCorrelationConfig &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::CommonCorrelationConfig &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5c27a616ad5697602eedfcb8b2997b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BlockPostPulse &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab03c89112b88f06b48461c2bfa891981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::BlockPostPulse &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::BlockPostPulse &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6f8124278a1a9e30b9560fe3d74fc735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSync &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::Backend backend)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a60ef3a110a4482bdd194216cca0c49b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstadls_1_1vx_1_1_playback_program_1_1_container_ticket" kindref="compound">PlaybackProgram::ContainerTicket</ref>&lt; haldls::vx::SystimeSync &gt;</type>
        <definition>PlaybackProgram::ContainerTicket&lt; haldls::vx::SystimeSync &gt; stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::read</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord)</argsstring>
        <name>read</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to read container data from given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac652f60b386670169e6e9ffcb2fb2536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>return ss</type>
        <definition>return ss stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::str</definition>
        <argsstring>()</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2405aa30cbc3e78570716ddbae8b084c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::wait_until</definition>
        <argsstring>(typename haldls::vx::Timer::coordinate_type const &amp;coord, haldls::vx::Timer::Value time)</argsstring>
        <name>wait_until</name>
        <param>
          <type>typename haldls::vx::Timer::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer::Value</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Add instruction to block execution until specified timer has reached specified value. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>In favor of block_until </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer coordinate for which to wait </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer value until which to block execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a54786dbaf7918fea56f9cc2a2ae56f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a32539cb58324cb8b4184306b159ce55a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a39853c7dbfba2a39f87c12d89469a5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config, haldls::vx::INA219Config const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aab7f9261bfd88c66b3b187b4790e39cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Config ::coordinate_type const &amp;coord, haldls::vx::INA219Config const &amp;config, haldls::vx::INA219Config const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Config ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Config const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afbf9bf05a0219bd20bb8009cda9aa310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aed4b091503255b82babc986cdb5293c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config, haldls::vx::INA219Status const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a207eca75f50542c09b4fcfcc65dd2ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config, haldls::vx::INA219Status const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa066a0510d79b895fca56c20eac1e432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::INA219Status ::coordinate_type const &amp;coord, haldls::vx::INA219Status const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::INA219Status ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::INA219Status const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a586ad26b3de491c052503e442c63fbd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3d3a676c0b74a9c26e77d7abda3514b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6b0a02e70f17a2c218a8f7bd0ff76e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config, haldls::vx::NullPayloadReadable const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afd9666e3990d20129ec86740cd8652b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;coord, haldls::vx::NullPayloadReadable const &amp;config, haldls::vx::NullPayloadReadable const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NullPayloadReadable ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NullPayloadReadable const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac3e99a9955f28a9925dd7baf3b1e6d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8057049f6dd866cd41133c66a8083d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4b7cbb5c005f852c53b9ba06cd795137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8e1acff542eb43b281839c6d205f9268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config, haldls::vx::CADCOffsetSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCOffsetSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCOffsetSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae124267eb5b3377be3dedb5590b86ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a22f8ddaecac2f3dbf4f330efcb8573ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa37e9306b0bbe57425ff77cc9a9bd923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aad2a307e5080ae69f54eb682dcb489e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config, haldls::vx::SynapseDriverSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a56c3789b5d11431ee160c47c83985de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aee3f561568fff51f427de5725a08b67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adff997fc8d8af2a1998238d30b2a09ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config, haldls::vx::NeuronSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a88189963511aa96a449784b2866e75f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronSRAMTimingConfig const &amp;config, haldls::vx::NeuronSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7c69a16b3edaeb50e2358f8319d8decf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a541fdf9a1c362fbc7a3f43e1c138669b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a55996c316899504d598e7b80592076d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad686162a06b1e685153c7e05b25704ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config, haldls::vx::NeuronBackendSRAMTimingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendSRAMTimingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendSRAMTimingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a98e629db56b0e3f37076b6f274f261e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a689e5eabb299ff6b42fe32d29238e093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2a61a41d797bd6f9313fb4ca7f003df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config, haldls::vx::ExternalPPUMemoryByte const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2d142d81cc5d20084660cf1309de3ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;coord, haldls::vx::ExternalPPUMemoryByte const &amp;config, haldls::vx::ExternalPPUMemoryByte const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ExternalPPUMemoryByte ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ExternalPPUMemoryByte const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afa0db555c66a6468ccce0bbdd334bdc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::NeuronReset const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44887206e7f97a2e860cabba6e112618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aefe1b9a2d22c95f641c66542c400135d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a514b79d2146a68db454ec4e901523d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronReset ::coordinate_type const &amp;coord, haldls::vx::NeuronReset const &amp;config, haldls::vx::NeuronReset const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a68bb50462f6d9e724b6c66eadce268b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adbb4897da6a06a715d9a26fd2258daff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::SpikeCounterRead const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab801f2dadbbba3a2c3723ebd58f4bed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::SpikeCounterRead const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac55c3ed05ce969bc6fca19bc937dff95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterRead const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterRead ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterRead const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adcda1392577e4a8663174f80481b4928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5546873e9c0df72808cfc2c5ea05f2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac8870dc8298e3ecf83b2f7acb21bc5e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::SpikeCounterReset const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a365ebf077ba555c44db22faeb68a8e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;coord, haldls::vx::SpikeCounterReset const &amp;config, haldls::vx::SpikeCounterReset const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikeCounterReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikeCounterReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab181f0267a5d66374993d0b877d9d523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad9a0731ce9ed2b68fd24985eedb2249d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a265dbc914fc7a31780620e056962761f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::HicannARQStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac32ab6000faff924bd92bd7a00e076d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;coord, haldls::vx::HicannARQStatus const &amp;config, haldls::vx::HicannARQStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::HicannARQStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::HicannARQStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2e1557e4d757ff419f73a1eae1f32bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4cff671ff3e2e347bf4221c17f8d40bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae2628a61a5c8e6c0138274e352c8b824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::PhyStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4c939452484107b3b94e20326811fd6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyStatus ::coordinate_type const &amp;coord, haldls::vx::PhyStatus const &amp;config, haldls::vx::PhyStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abd1e23f4f38059e22c88f6b52e9f86af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a41a4d261bf7de06703aff186fdd9b330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a679b0087811ea28b1133b92e36e9cac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::PPUMemoryWord const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a51d22f911b8ad810971fdd465e3c30c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryWord const &amp;config, haldls::vx::PPUMemoryWord const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryWord ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryWord const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2d0ded2c13b33a626e563dec8003f025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac5f6c857231710b0609b6a71f019e86c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a80126683333437cd436b2b1d31500cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::PPUMemoryBlock const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae97defb0d83a9874a539f122b19e9b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;coord, haldls::vx::PPUMemoryBlock const &amp;config, haldls::vx::PPUMemoryBlock const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemoryBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemoryBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad5f43c2cfc9e2fb13bb5f0ffbf02cd71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae162795ae4953b394877c90b59f8f0b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::PPUMemory const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae986766e9007001914d2ccf6c5e9deed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::PPUMemory const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a61cd7cb670077801c4f1342eee9e1e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUMemory ::coordinate_type const &amp;coord, haldls::vx::PPUMemory const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUMemory ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUMemory const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaaf320f9e7fe1147915c63b2ca491e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d6457aaeab7a2ab8b175bfe63b04669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaebb90cd0d75a46842884092bcf9ef91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::PPUControlRegister const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a28548adf26abccd7d5fd06670d27c174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;coord, haldls::vx::PPUControlRegister const &amp;config, haldls::vx::PPUControlRegister const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUControlRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUControlRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa37ef23994b86e3adf5343d9ce9ade08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aca65391b047c5e6ca20dab64a4ededa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::PPUStatusRegister const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9cdd080ba007ce18b79a6ea061753ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a297a458de47d787441cc700c3e3c4a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;coord, haldls::vx::PPUStatusRegister const &amp;config, haldls::vx::PPUStatusRegister const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PPUStatusRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PPUStatusRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae48c75c56ab1197f4e0178b538cdffff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::ResetChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1affba6f6ee912fc2e9ff283ae0fee77ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5cb9598d51998a32d82a07bfafcaee45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa0ac85ab39b21af44f0ff68a0231da77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetChip ::coordinate_type const &amp;coord, haldls::vx::ResetChip const &amp;config, haldls::vx::ResetChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9976635fdc012caf802116a6e8886e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a50c92a041394bf7dbc96ed4b1928e626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5ac75dcf86ffb8d29e089d5eba8fcc81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Timer const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a52b7619e9cf0c713fc07d92a88cfcf68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::Timer ::coordinate_type const &amp;coord, haldls::vx::Timer const &amp;config, haldls::vx::Timer const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::Timer ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Timer const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aca0283c838b237a2916b4e6e29560b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abe4c17a7ed8149c828bec2107a9283e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad0a867c91cf7594662682975fad26f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::JTAGClockScaler const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a733bd6cd53e6b84f9e4b30f3b8b6a9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;coord, haldls::vx::JTAGClockScaler const &amp;config, haldls::vx::JTAGClockScaler const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGClockScaler ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGClockScaler const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ccf91dc5c2a1c0b03d184f48568688f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a09f397cda3a99e69bd9390e774c5da0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab29fb59bac3bcf65cd2f983803085f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::JTAGIdCode const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3e6159b8df2f08d05d6502ff44f8ac1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;coord, haldls::vx::JTAGIdCode const &amp;config, haldls::vx::JTAGIdCode const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::JTAGIdCode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::JTAGIdCode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7f2b3103251d03e05a81e68e2504a40a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a930a1a87eddd2efba169cc2b16d86f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a56ee2f70c3fb465a5d6a16f2296900c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::ResetJTAGTap const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8487a6b71fff3f009fa495d07551bdd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;coord, haldls::vx::ResetJTAGTap const &amp;config, haldls::vx::ResetJTAGTap const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ResetJTAGTap ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ResetJTAGTap const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a492a834337a0e416de134c069e899c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7dbb5b255c0f3bebb745f5458edf9d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7e3184927fdee6ee7b160a03625a96e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::ShiftRegister const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa65e0ba5da9c64f11783b5ea682e8dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ShiftRegister ::coordinate_type const &amp;coord, haldls::vx::ShiftRegister const &amp;config, haldls::vx::ShiftRegister const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ShiftRegister ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ShiftRegister const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af3236d435397c78f15f8f81615a21707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a49cf19a6515e99ff7fc2331d2b4a8edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a14083120df1b7295b699656f29bee7ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::DACChannel const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac9cb19a65c4f75ba9f6c2173abdfb641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACChannel ::coordinate_type const &amp;coord, haldls::vx::DACChannel const &amp;config, haldls::vx::DACChannel const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACChannel ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACChannel const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a63feeca9f44d597d74f5fc65393e081f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa83ffdcdbcafafb6e20fd2d8c3e58e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a31c618ffa504066146c7210d03e2898c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::DACControl const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ddba7f8242407d52b95679c162e0a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::DACControl ::coordinate_type const &amp;coord, haldls::vx::DACControl const &amp;config, haldls::vx::DACControl const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::DACControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::DACControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a22b015d163cdba2d8b2232eb08513ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab20e0ec59f3f739dfe3da296c603b3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae98b4bc587c6cd9d9287f4be03a752c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::CapMemCell const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae545ac1a36a40388e158d5685c0bde95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemCell ::coordinate_type const &amp;coord, haldls::vx::CapMemCell const &amp;config, haldls::vx::CapMemCell const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemCell ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemCell const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adcb3dedde3761ebec81aa2a0bd65fb1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a371fe87ee4f5e2bbf957c44ef96dd6a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afd19008ed5bb7b9d6a84c0b3c768b4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::CapMemBlock const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7aac31f2a78f030b73ebafb878a842b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlock ::coordinate_type const &amp;coord, haldls::vx::CapMemBlock const &amp;config, haldls::vx::CapMemBlock const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af340333c8565b72e3f2daa1bf5449ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::CapMemBlockConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa880202059c8e110ff3acc808684fe50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2cac80bee58d71825090af077af385a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2f5d0e675ae1168ae1e03e9d3b254f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;coord, haldls::vx::CapMemBlockConfig const &amp;config, haldls::vx::CapMemBlockConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CapMemBlockConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CapMemBlockConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af21eecbed90e1c124eb50e166f54dccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::CommonNeuronBackendConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac47fb670d50351d22ec3940c6cd022ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af736166f2f7aab6e38d150ba0155c22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae73a3d240e7a253897dd594dac4d0de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::CommonNeuronBackendConfig const &amp;config, haldls::vx::CommonNeuronBackendConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonNeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonNeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abb841de3fbc7f2fc921631488d4190bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5019bfd5a9dd40924cc3738ceaa67822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2b27b33ab8e67d63f687c4f45d791415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::NeuronBackendConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afdd146436a54699ff312bbe2695fd8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronBackendConfig const &amp;config, haldls::vx::NeuronBackendConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronBackendConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronBackendConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a111c435b4ea5a8c6d95e927bae571ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8014fc62e046d866e358898edcbacf99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa374dde63ba0c3a98ba87209949cdcac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::NeuronConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3583766aed92b736954d30f91f18e224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronConfig ::coordinate_type const &amp;coord, haldls::vx::NeuronConfig const &amp;config, haldls::vx::NeuronConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afa060250e9e29289d5c9cdb74e0c0bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af58b943ef5e57484ef3eb900b8c15ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1892ffdfe4e73aa8bb1d564741b32c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::SynapseDriverConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0348dbc66f529d2817140043ad9b1969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;coord, haldls::vx::SynapseDriverConfig const &amp;config, haldls::vx::SynapseDriverConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseDriverConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseDriverConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a33a4bb515adec08f6c53c955e8eaa78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac1b044a40b9eb9e6432a95d789d85195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::PADIEvent const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1bde4ed1ed2d1735980bf66827a35e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a89e7d4c664d68cef47e6cced6ecbeafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PADIEvent ::coordinate_type const &amp;coord, haldls::vx::PADIEvent const &amp;config, haldls::vx::PADIEvent const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PADIEvent ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PADIEvent const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afcc9a8631048b6af14a0348af0422b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::CommonPADIBusConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a20d3dcd0b0e8094b9ea858c730be079e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af11b95ca26e9a8a271fde978a33e1407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a998286449d0cbbc776d1ed87ea3f3ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;coord, haldls::vx::CommonPADIBusConfig const &amp;config, haldls::vx::CommonPADIBusConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPADIBusConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPADIBusConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5fa3e6b2aea8ec409aac5cbab60f1a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::CommonSTPConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a10a53a39c37b1228456751c0db3cb825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adec226a563ea9064a133ae2e7be3fd89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config, haldls::vx::CommonSTPConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab46f63781fed0fc2c81d022e69ec1824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSTPConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSTPConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSTPConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a65736bec337ce10aeeabf6cac02bf211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a45dbd813926394800c7cecb349286cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8e82c10cdcd1c4dc6adbb0e0fddd0da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::ADPLL const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab78565e93fec7493ff3024cd7dd5b069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ADPLL ::coordinate_type const &amp;coord, haldls::vx::ADPLL const &amp;config, haldls::vx::ADPLL const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ADPLL ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ADPLL const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaa68af6fd662373c27453c89b317da44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adbca5abca4c1f0c720734fb2e856da3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::PLLClockOutputBlock const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abac5ff87c65552d63bc12d9ee063378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config, haldls::vx::PLLClockOutputBlock const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abb646ef3924a294854f1344e3bad3579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;coord, haldls::vx::PLLClockOutputBlock const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLClockOutputBlock ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLClockOutputBlock const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6f9a42fd46c784baa1571bce5867bc69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aba858c32285c1ff631eb0af5c5a72881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5005639b0b0f9325dff366cd6f84baca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::PLLSelfTest const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab3f4d9ae17b5a05aa642bc994fd1ab00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTest const &amp;config, haldls::vx::PLLSelfTest const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad7753220264fc241913ee265e6735124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0b44579a9edfbf279bc86423253b8abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a371194b185b1dc2c058dcd7b6232a6d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::PLLSelfTestStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a09618547f6c9fb50f63bb9a4168176f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PLLSelfTestStatus const &amp;config, haldls::vx::PLLSelfTestStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PLLSelfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PLLSelfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a73b45b80bf933ccc63992d762808e603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::PhyConfigFPGA const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abf696eef6c0f2f07d891caf9fe9b5a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a00361fb838241024f98f704aeff33bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab3a802f67824392a7f0833360336c539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::PhyConfigFPGA const &amp;config, haldls::vx::PhyConfigFPGA const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa5e5c6dc9a94e56070fb62b2b38eaccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1e150fb52435bfbd7ec49bf2e7e0395d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::CommonPhyConfigFPGA const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a39421ae7285c380ed4e692b1f98c704e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::CommonPhyConfigFPGA const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acff5a8657a1e4d64dcf6591c575df154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigFPGA const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigFPGA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigFPGA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a80efb5c2ca35489d818751dafaba39d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afbee495d1390124cab86bb87b5eabc6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1efccd005bfdcdd6017f9722024f861b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::PhyConfigChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad66e8b9a36affa7c282a214c22ea5caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::PhyConfigChip const &amp;config, haldls::vx::PhyConfigChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5e2f2be5e4e75770ed542b345b0407ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a437900a00f76c37419626c73ae3d3b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a84b2a9b5eb140d297673812c411214c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::CommonPhyConfigChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7b612c8490f594784481e194a0a53efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;coord, haldls::vx::CommonPhyConfigChip const &amp;config, haldls::vx::CommonPhyConfigChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonPhyConfigChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonPhyConfigChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4c884517e4e84365ad57485aa929aae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::PerfTest const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8f131b014c2525edb1c847a3e0ce2394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa2132c65aaa753b1a0473968e31f80f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::PerfTest const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a876ab7ba1fa30dcd633a9afd569e4ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTest ::coordinate_type const &amp;coord, haldls::vx::PerfTest const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTest ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTest const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad47771bd40ccc5bcdcd7d21e5f8bd023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aeff1b5f0ead06f40575822686d40cff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aac26b143c92a8fd044ab961b870fa95b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::PerfTestStatus const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af42ac87a0beba5e9b3987638932995f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;coord, haldls::vx::PerfTestStatus const &amp;config, haldls::vx::PerfTestStatus const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PerfTestStatus ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PerfTestStatus const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaef8ef7a3cef8e51a04c67e531a6e6c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::SystimeSyncBase const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a04f1facdb53bf8292e92a8b4214c2f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ecdc6e8eb4c2e9ec87a1b1c7f864e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::SystimeSyncBase const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8c37493757c74495c20fc2bb1a625f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;coord, haldls::vx::SystimeSyncBase const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSyncBase ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSyncBase const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae942b59596e0959d66079fecbf93c72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::CommonSynramConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa7b911d51da61159e56103463d3e8254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad4b7e001e19a716d3e4757dca0481876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6982cf1a70c1a8b04b2e4b30d1adde95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;coord, haldls::vx::CommonSynramConfig const &amp;config, haldls::vx::CommonSynramConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonSynramConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonSynramConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5d0422f6256aeefa3052c57acd21a301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a52bb9a80cd40c9fec4fb85bb7bf097d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::SynapseQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a37cb74733e2e93a145512d025918e854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1cb9e05cf8d855b9084579132a441187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseQuad const &amp;config, haldls::vx::SynapseQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab6b2f5480c93aa0f4c7dbcd0ffdc2303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a70c688230c229c2875ac09071cc8e47f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config, haldls::vx::SynapseWeightQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aabbcb29b630416f78fa8def3544fbdaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5509d605d5c27e21ad736a9ff44b67d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseWeightQuad const &amp;config, haldls::vx::SynapseWeightQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseWeightQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseWeightQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1affcf33cab46559c3083c2ce9882f7f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config, haldls::vx::SynapseLabelQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaf38a1d500dd0374f5412e3806f5eb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config, haldls::vx::SynapseLabelQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a85ce9caac7aae2796e218105accbdd23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a89f8fd7846e2701e0679b7fdfd620b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseLabelQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseLabelQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseLabelQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5fda7a845823fd5877139829462dffd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config, haldls::vx::SynapseCorrelationCalibQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab7168f1c5bff696fa0e54266be33919c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad17a5b38b91cba7a28f313b5e05081d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac002a7aadd52b1f79b6e1bb79beed1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;coord, haldls::vx::SynapseCorrelationCalibQuad const &amp;config, haldls::vx::SynapseCorrelationCalibQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseCorrelationCalibQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseCorrelationCalibQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab548951f9c14c2b419585e35ce0d9777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::ColumnCorrelationQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4adb8f67598a0fa1ab94604dbf62962a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::ColumnCorrelationQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a287aa1596c27b4d11931c171894a8939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4981a4404adc813443a6e9130f42716a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCorrelationQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCorrelationQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCorrelationQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a726ace6c20fbe85021998b18aebfc990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::ColumnCurrentQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1addc17ba6ddfeeefee04218cce4d9210b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a152bd0b020cbef21a223053c3b0d757a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afcd2ffc6976ff9c5f209e5f7e78e1cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;coord, haldls::vx::ColumnCurrentQuad const &amp;config, haldls::vx::ColumnCurrentQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ColumnCurrentQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ColumnCurrentQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3b2c6c883fdb961cb603f6ac1a6914e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9746eb5f1e7ec5051f5837347f56a331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::CADCConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa97b01f950ae58b8d4815fb13f610ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config, haldls::vx::CADCConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aab433778b4570d0788601e9df5e1e536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCConfig ::coordinate_type const &amp;coord, haldls::vx::CADCConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ace36a8b0d2d1aa1215866086eb7dcd20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a43ed924e586528c3a0b38211992a8bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a493af1f45959cf5de330091483ecdce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::CADCChannelConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae725895831268adf979ba96d691296a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;coord, haldls::vx::CADCChannelConfig const &amp;config, haldls::vx::CADCChannelConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCChannelConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCChannelConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0c784d7cec8efe22ab702a864e6a923b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::CADCSampleQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a86f34f7c2f15b9d70518dd2dea705d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::CADCSampleQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a509792a5bf8852272cacf588c294155a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8e3f3ff5e5b2ffb1359f640209e5bff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;coord, haldls::vx::CADCSampleQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CADCSampleQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CADCSampleQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8b26ce3afd8a40c6321258fa86fb71ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a687ad2c2c9566febf703a0e2ad6f3bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acfc45957da54d867cfb769d67cb660bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::SpikePack1ToChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac6acabc3799cdde8f2dc2a5506ca43b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack1ToChip const &amp;config, haldls::vx::SpikePack1ToChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack1ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack1ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ace7864f0449eb4b03d56799f1af7e836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adbc533367176f396d380a90e1a9723ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::SpikePack2ToChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a67d7b5a58db4be5a32788c3304c7cd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::SpikePack2ToChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7a62a6dff1db2e76781b4368cccf2406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack2ToChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack2ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack2ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6738449a41b54f7867af9beae4630347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a382546ee33f8b02d0d4722f5e1bdf33e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad0e62caca0f85342890c3f3dd67ba464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::SpikePack3ToChip const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6f490793ee1859504c097ffe73196e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;coord, haldls::vx::SpikePack3ToChip const &amp;config, haldls::vx::SpikePack3ToChip const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SpikePack3ToChip ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SpikePack3ToChip const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af1fbaab56631ba3a2c51e3b6c716db39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::FPGADeviceDNA const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5becbb9ffa134e109476b14566dfd855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::FPGADeviceDNA const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abd38b31bf9b85a9d1a6e87b0e6dc08f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae828cc99c1218636e20d71647435c4cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;coord, haldls::vx::FPGADeviceDNA const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::FPGADeviceDNA ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::FPGADeviceDNA const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a39a3724be4fedaa6a70f9e13c5fef3cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa40aa3ee87472d09141c6e8d5b30df57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::EventRecordingConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a861887dafc960dd59adcb1a68d70e3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3c1edc137e6e1c16866873901ec41dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;coord, haldls::vx::EventRecordingConfig const &amp;config, haldls::vx::EventRecordingConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::EventRecordingConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::EventRecordingConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adcda4a60da170e1c087c9715900be097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af7f2ce4c7897511974f3690bb65039ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a78167f312b6625b7e3bc8e9bc460d819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::BackgroundSpikeSource const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8f8240e29fdfbce5f3b11c5551d64531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;coord, haldls::vx::BackgroundSpikeSource const &amp;config, haldls::vx::BackgroundSpikeSource const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BackgroundSpikeSource ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BackgroundSpikeSource const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad432f2ae2961e5e685363fb4cfddbb70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ffb99b534535bd1d4a6114896601373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa642c74db7853fe358613890f63757f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::CrossbarOutputConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a15bc14131b8bf2bc0d0b488523fd3e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputConfig const &amp;config, haldls::vx::CrossbarOutputConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a15fab42129a59ace9cf95fef20d938ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a010e731689a179e25c739bf07ef07627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::CrossbarNode const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a726c7437b320c6a7b665e43c14d07698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d96408e20aceb21895679ecad2c9f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarNode ::coordinate_type const &amp;coord, haldls::vx::CrossbarNode const &amp;config, haldls::vx::CrossbarNode const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarNode ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarNode const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a45c92e2a4d9697b4b5fb07004646c9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac86b67cdd403aca605f9f427a67dab76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::CrossbarInputDropCounter const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aafb83c406e0b17f9d5892a9ba8bcb550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config, haldls::vx::CrossbarInputDropCounter const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aae11c8c5906046acbaedd39a642248c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarInputDropCounter const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarInputDropCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarInputDropCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4e5cf03b8bd598da5e4cdc91cdbf8ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::CrossbarOutputEventCounter const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0a61bd0ca3bcf1924b30371df3b9b1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a56a5f31744c687458f00bf8d0497a988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config, haldls::vx::CrossbarOutputEventCounter const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a62eee7a90fe3edd0d5e399fea3ba9eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;coord, haldls::vx::CrossbarOutputEventCounter const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CrossbarOutputEventCounter ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CrossbarOutputEventCounter const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a34a5ea8f8618c907cd8add525001d8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a145aabd27906a3c42758618a6e6c902a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad8a45f8d14d04bd66c5d5635e69d2aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::SynapseBiasSelection const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a885d035f51b3274ee64e604b7e29050f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;coord, haldls::vx::SynapseBiasSelection const &amp;config, haldls::vx::SynapseBiasSelection const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SynapseBiasSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SynapseBiasSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a917d9fad0b972d9b97ea520b2d76fb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::ReferenceGeneratorConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ace3200f0011f124a58e0f6e6097fb5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adb7276a464297056bf77505aed18ff81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config, haldls::vx::ReferenceGeneratorConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aad1b8cf9b5b3de5c80a349e298cfdc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;coord, haldls::vx::ReferenceGeneratorConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReferenceGeneratorConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReferenceGeneratorConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8ca90ad388017b4ac8f75399963526aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::PadMultiplexerConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d27194e69adce152b273c241ed031a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a29fb9caaa6e6a1c3a4dcb0bcca078c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::PadMultiplexerConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab31a307b1cbf1435e1636aae2b2ff3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;coord, haldls::vx::PadMultiplexerConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::PadMultiplexerConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::PadMultiplexerConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac90909d508ded57aaca73a827a208450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a53555f020055f0b18ec0d7db1aded8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::ReadoutSourceSelection const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac4d4939d3267f12fc73f968d6485d725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config, haldls::vx::ReadoutSourceSelection const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abcd4d852ffe613cae1d639b6d2a84912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;coord, haldls::vx::ReadoutSourceSelection const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::ReadoutSourceSelection ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::ReadoutSourceSelection const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a88ed79f98c2e5e2bb36d251b76dea3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae171a927a17bd30017358d835b243f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::MADCControl const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2e08eeb98cee31599bcff4b1a3b512c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5a22b413290379d012b2ff63c7ec29be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCControl ::coordinate_type const &amp;coord, haldls::vx::MADCControl const &amp;config, haldls::vx::MADCControl const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCControl ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCControl const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaab366d5add80d110c252e7f467aca46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abfa271128f3cdccf013789b0b110fefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config, haldls::vx::MADCConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a875c7746932aed690e7a068e267f871b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config, haldls::vx::MADCConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3857d50a43be34610f630ae248981fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::MADCConfig ::coordinate_type const &amp;coord, haldls::vx::MADCConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::MADCConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::MADCConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3e8b39da59214df38f7a57f9d7f23c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a29aafc48ee5ed49f0580233e17509f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::CorrelationReset const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a30f6ca6d80c095dc197e924280ce1360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config, haldls::vx::CorrelationReset const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a419e9e46f6b24f76df3109ed537e252b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CorrelationReset ::coordinate_type const &amp;coord, haldls::vx::CorrelationReset const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CorrelationReset ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CorrelationReset const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa0cbb178ee8034a496eb25f1146e31b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7bede5f6c23132dd9bc2949c67db45ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::NeuronResetQuad const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d4902d74955b70e21bc59059b591b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config, haldls::vx::NeuronResetQuad const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa38cbfe1bf706c19c9fdc2aca38594ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;coord, haldls::vx::NeuronResetQuad const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::NeuronResetQuad ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::NeuronResetQuad const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2596351dd9979ad0e2000a0517e0bc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::CommonCorrelationConfig const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5919aecf1305e135bd6e917265d8a9ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::CommonCorrelationConfig const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5030e7dea60f6f6f5437df2727a3df16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a112c15056a291001b7943b675ff62e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;coord, haldls::vx::CommonCorrelationConfig const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::CommonCorrelationConfig ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::CommonCorrelationConfig const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac0c910b8bfc6e2ca977706ff424d9be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::BlockPostPulse const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a763a47a9615aac6a79e5f00d5f8d7c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::BlockPostPulse const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0e232438a55a5fd3281cb2ee97540d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a64a59768e09375d7de769b64be25572e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;coord, haldls::vx::BlockPostPulse const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::BlockPostPulse ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::BlockPostPulse const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0944630a63aa524c760cc780e62abb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1ced0bd88e189ac052b541811e1f1590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::SystimeSync const &amp;config_reference)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. * The container&apos;s default backend is used. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write * </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function without backend parameter is needed due to python wrapping not being * able to handle templated default arguments. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abd23823e1f7540487319b9f4c199ed9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae9c08225755f5bf54689e1b11ecb5cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;::write</definition>
        <argsstring>(typename haldls::vx::SystimeSync ::coordinate_type const &amp;coord, haldls::vx::SystimeSync const &amp;config, haldls::vx::SystimeSync const &amp;config_reference, haldls::vx::Backend backend)</argsstring>
        <name>write</name>
        <param>
          <type>typename haldls::vx::SystimeSync ::coordinate_type const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>haldls::vx::SystimeSync const &amp;</type>
          <declname>config_reference</declname>
        </param>
        <param>
          <type>haldls::vx::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Add instructions to write given container to given location. *<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value selecting location *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Container configuration data *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference configuration for differential write *</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/container.def" line="87" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af40902f715390ec434696d84d7a08d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, PlaybackProgramBuilderAdapter&lt; T, U &gt; const &amp;builder)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter" kindref="compound">PlaybackProgramBuilderAdapter</ref>&lt; T, U &gt; const &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program_builder.h" line="208" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Sequential <ref refid="classstadls_1_1vx_1_1_playback_program" kindref="compound">PlaybackProgram</ref> builder. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="39">
        <label>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; fisch::vx::PlaybackProgramBuilder, PlaybackProgram &gt;</label>
        <link refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter"/>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; fisch::vx::PlaybackProgramBuilder, PlaybackProgram &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>stadls::vx::detail::PlaybackProgramBuilderAdapter&lt; BuilderStorage, DoneType &gt;</label>
        <link refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter"/>
      </node>
    </inheritancegraph>
    <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program.h" line="28" column="1" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/stadls/vx/playback_program.h" bodystart="28" bodyend="-1"/>
    <listofallmembers>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a49f942d3e293c5cc42c86054c82ff424" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>block_until</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad06a8c758af8acbb5bed054d5907b218" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>block_until</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a74a2b61f7160eb22f930fa8336cb20e0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>constexpr</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a430ebb8b09566f9220ce7c78e6656597" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>copy_back</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5eda21e8646e0cf274a5d8f61f8a1258" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>copy_back</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6388a5b73aaa382e209b4c5adb4921cd" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>def</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a30b97a4efd768bf74f1742ef7d470692" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>done</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9daa21188f981e864cead70109dfe0e5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>else</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a11aad743b06f6c8a3f247012a1096f24" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>merge_back</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1aa7a7fa3a5187bf9569b0d66757763c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>merge_back</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0a6f0bc71d627b22c20d2d0e3d648127" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>merge_back</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a380451d4397c2f8cb3b7635def24427f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>merge_back</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af40902f715390ec434696d84d7a08d16" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>operator&lt;&lt;</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3f627c67bad6bbf815c885e5ac2e6663" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>operator=</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1a8b417aee8b75e551ef05de20082f2e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>PlaybackProgramBuilderAdapter</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44bc80ab776b7ac07cc4faaeb7427071" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>PlaybackProgramBuilderAdapter</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a052b384f446c75259067d3918e70046f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>PlaybackProgramBuilderAdapter</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5d14cefe08a1936b5f528b2bc5f2b351" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9d180099274decd3acacb194fc67c1f9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa210a2465c89f320d4fba19854143787" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a62845a17ba74fc8016c5f21284cd4547" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae99727513c79ef5ff3bff00662eb149b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a412d90b57c063014fdc27d13bd89647c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0f524dd8a5d6fc6908ec82f09700c3e9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9c1cc6d9e7fbbb5da1e31809b7bee91a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44639037d1213bd66ed5e6e0a828407b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a03a609f230d5b27bbb0959cf1e237648" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aedd997a4584de2b6dc49d9d2525f88af" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a11979fb7cdde9233ee6e2087cceafa8b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9d8bfc011c3f2243da01d573a555b5de" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aec88d05326a878ce7a07fee3435e46d8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3b041b88e238b5145fefa6e1471a3643" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abe585ef42102577432e8f00bfaa2f27b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2a37b72c1e611175ced925a1e2806b96" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa36c035e21774c891d8b44a44bcd5daf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1940addecc023bd48e9f5a7f63e38cea" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7600af8103d6824c4961408c121c78c1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8b3a68a5f685bf2781b9c3f50129642f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aec5a0341bc5eb6881c7d3b0a22af875f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8a89df0f3bde4d5aa6e77307815bd5e1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a40798ab6a349dc4026aa7fd89f63270a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa774c27c609ff5284de31af3c6a83c9b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af094ec37503f89a8b150ddc6114a4646" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a151cd2a9380924aa80447224388a5025" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab3017693fa8ecfad515f7b590e919d47" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a16ce23074190d7da9cfb2bddd29054b9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a97a99d9c4905ed7c43dd5c475f30d951" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a14ecd722077ce60701413dca4efe3793" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6126cf680099aa955e17650c2d663430" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7bd41f8ccdfdd6858abc24e985c20593" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a09166f51be1628a32e2f33c93b237399" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6287a09327e4c64426a65cdb816b5730" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af173adb7bd03ab6a403c98ba09d20f3a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a42853550f9f4c99945fcbb02fa6852cb" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae82ddc6d2e8ce07d3654a9b2e88e28a9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6d021953b6584aa2c7532273138a71d4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad8ca5c1d66e913ee1f4f9f5464a408f4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae6bb3a2f0285dbbee644152fc24b7976" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac362022f0c563206ece77341842c2acc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aef3be1b9385a30f8151fc86fe5267a6a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a25b49080cb2657c018e4f570e0986b9a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa6c3de7584d01f05be1b2e7f95af4055" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a66840acd5a831518c4a23dc6acbdad82" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7a48c4f61c9acea03f67cabded09a553" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adda2b7bcb481cf6b3570e401a21ec7f4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2c5ed64f29a9bf2192a333c3ee6f526e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab12a45bfddaf62e4bb40d281a015e862" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa85078dba388e1ae53fa3ee6e44cd669" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1bda86696520c8d10b6574faa02151bf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af1ed4fed9f21f936aedb34f3e958265e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a94d6198900cc77ce028f6bba4665f56e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a91ca553ba1e0459a015a084f9f2eecd3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8f319047d37ce526d7e2861d0782ad90" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af8ff7dc22477d1e7b7323e82adb6156b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7c9c45b3e0f552bb4b9142b6a4142c54" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a37b046f6b27efad0badabc34868ad8e7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a336070396dde99762bca4f314784e022" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6cebf94df8d1f4cc8bbd77c802f8903a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1affa0879722fa3e2821b8679732e349e0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af12a747c974e5e7779c1e0995471a663" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6cd6b71ab9ac73888c05f01f838fe8c9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9bfd1396addabc0a8362c24ecac9caa4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8390b472dd4c28fec45bb7c2b18a8820" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a25dde8ab0bc3451fffede95cc636fd49" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5e99e29feae454b6312ffad8505b637b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0a6f6b84622a2405556d81c122e93be2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aedc26d6259ee94753a9b0f3cfe2a6cdc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9adf69934296d2f0bf6d0117aaea185e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a72a43f84912099f3efa261e8fe629563" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acda25c7874dd5963af556618f25c048e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44f6b51746692a128ba8aace835f6741" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9e055df349b8240ee2abe9fdd8cdecd6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1c7f8a076049e4d9fa27ed697a269863" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a740ea13b17b912403b87482a934a0c51" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abb7a7a0d424394cf44b76012eadaf988" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a66448833166d29199b1c968dd9b5e0e8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9c47780bf5cd825d93c8d7c132f841ad" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af52bb140b1ce8a03c88204958dafb1c7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1da1f45cb80249fa04b0f0b76f35602a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2bd5b166d662bd94fc3fd58a4242970c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a468dd1ec128d1eb32722b2569e0e4d22" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7ac84947fffedcbc0abd28c3d506a07f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a74c554ae15d02fc5e436bb893103351c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4952b38521bea16a5066d7901e87400b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aadcbd0e25d9008a31e36d690a68daabf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a95eeee72dc92429b23005c01d853bfbf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad07c48f7ad0eccf301a8972555221794" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a287346f2c2179c0771158a555143f6d5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9d6e99cc2416a9cfbf07b8e869d37309" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0232ef4dbbd53d28b56e852881a35f74" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3379f75d88293fe317c7055b29c707da" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a797dcb2ac0dc5b1861ee042b17151361" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abc3d0d32373e495252f7b25daa0a2f3d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a82d735b57c641021715010856db3be01" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2404294a73fb74d3816eb90a0c697eac" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad578656bfd949a0cb745fef9bf68f2cb" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad417753d4090b251b3ae7e6291d23af8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa89d28b2d6185ffbca41d238848805e8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac212ed249857b502553c42866c83cfac" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0933e7c96f20dbec73b4517919834534" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae40cc233a391df353fe332afc3088705" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5ddc34c991ee22fe01ac6a7713dd0a9b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a031e7911dd3d8cb2bbba7ff8a3451016" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1427adbdac2d27695c5d463a7d299feb" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac9bfe203f2ed816deea860def77b4235" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afd5214f0577afa4aa8eaa39d9cd7bd46" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab0f6368d9903859d7455eb15e5acfd5c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3561ad5a55ac14a9f8d40894a820c0f3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a49f987af4a1e1825e6a1809b27a2114f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a75dde1816c26fca83ee00b3e52bd05ad" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aea100814be7821bb43877c56bdbdcee1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a61669b02775e6eafb2ae85e6b64e5db0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaf5506bc23c89a76bed7b4abc7a85317" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac3e369911669f5bdbbd3fa7c8b17df23" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3754928e239f7bb41756296bcac9fcc1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4524d77a49fe26c4a660a1bd6858c00f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a24d3d7b9dab686bf7325daa8bd70c954" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6c031e097f04b2ba94e4052b0fe7cd34" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad2871a181f2f5631d4060d17d0676d58" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7016fe374d4e61ae3c9374372cc0690a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aae3fa2acbf41669844c18f25c0a2524f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a82f7828e44cd10b69da0889a6cac5eb0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afaf5ed0663a63d0f950d31152a68fc5c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5079f8486a53b23a07dd5d624fec4f57" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abc61d516b6a0f55e59894f34851ed53a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abe0038c52d00e0fa3c6b23d81f2c0753" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aac78427cdc8b398055225226d2cdfd13" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aeaf20657cca25664308ffbed4dd972c1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac7eb4addb383a340cc0d548b79d22657" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2a9f39a4165d3837e1aa8486e9e94f23" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2782de1b068f622a0f80e64df479b99f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acd28560cd9e1f1607f8ad1154d37378b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5d6b21ce08a6ea2ae9c28a500cc5f719" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a227e40063bf1ded14d509d4dda875340" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad1cd4349e4a6fdcf2cdaeb7dc69a482f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad572d8f94c5f4cd93af863b8d6cded0e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2e3adf8c1a86a23ff452ed3180f3f11a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8ee210bb80f3d8532d1a7eaceef8934c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a50197290b965361dd64c4fd03d4a3320" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a41dbf0598158093288c20f59e0b43662" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af6ac7c6b829422af8542799580918c12" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaba226078b3b70ebd11122512cc210eb" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3f3aba5c2b9d0d011eb471832de5798d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af4bc1fb5932993fb530e11587c541a36" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a951aa5e85994275037c6158ebdba8123" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acc3b7c31dcbfc39f1a6c9da29baf12de" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0cc72d3f21773c56015fba41537a0cfd" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a40b4dd1d01b8c9174d94b6b53e68be59" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2f3f0f92ae85440dda36587900caa1c7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5c27a616ad5697602eedfcb8b2997b84" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab03c89112b88f06b48461c2bfa891981" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6f8124278a1a9e30b9560fe3d74fc735" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a60ef3a110a4482bdd194216cca0c49b4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>read</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac652f60b386670169e6e9ffcb2fb2536" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>str</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2405aa30cbc3e78570716ddbae8b084c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>wait_until</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a54786dbaf7918fea56f9cc2a2ae56f76" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a32539cb58324cb8b4184306b159ce55a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a39853c7dbfba2a39f87c12d89469a5e2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aab7f9261bfd88c66b3b187b4790e39cf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa066a0510d79b895fca56c20eac1e432" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afbf9bf05a0219bd20bb8009cda9aa310" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aed4b091503255b82babc986cdb5293c1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a207eca75f50542c09b4fcfcc65dd2ec3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a586ad26b3de491c052503e442c63fbd3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3d3a676c0b74a9c26e77d7abda3514b5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6b0a02e70f17a2c218a8f7bd0ff76e03" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afd9666e3990d20129ec86740cd8652b2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac3e99a9955f28a9925dd7baf3b1e6d65" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8057049f6dd866cd41133c66a8083d06" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4b7cbb5c005f852c53b9ba06cd795137" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8e1acff542eb43b281839c6d205f9268" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae124267eb5b3377be3dedb5590b86ca1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a22f8ddaecac2f3dbf4f330efcb8573ba" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa37e9306b0bbe57425ff77cc9a9bd923" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aad2a307e5080ae69f54eb682dcb489e7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a56c3789b5d11431ee160c47c83985de9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aee3f561568fff51f427de5725a08b67b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adff997fc8d8af2a1998238d30b2a09ff" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a88189963511aa96a449784b2866e75f8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7c69a16b3edaeb50e2358f8319d8decf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a541fdf9a1c362fbc7a3f43e1c138669b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a55996c316899504d598e7b80592076d3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad686162a06b1e685153c7e05b25704ad" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a98e629db56b0e3f37076b6f274f261e1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a689e5eabb299ff6b42fe32d29238e093" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2a61a41d797bd6f9313fb4ca7f003df5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2d142d81cc5d20084660cf1309de3ec0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a44887206e7f97a2e860cabba6e112618" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aefe1b9a2d22c95f641c66542c400135d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a514b79d2146a68db454ec4e901523d75" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afa0db555c66a6468ccce0bbdd334bdc7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac55c3ed05ce969bc6fca19bc937dff95" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a68bb50462f6d9e724b6c66eadce268b8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adbb4897da6a06a715d9a26fd2258daff" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab801f2dadbbba3a2c3723ebd58f4bed6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adcda1392577e4a8663174f80481b4928" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5546873e9c0df72808cfc2c5ea05f2f3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac8870dc8298e3ecf83b2f7acb21bc5e5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a365ebf077ba555c44db22faeb68a8e04" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab181f0267a5d66374993d0b877d9d523" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad9a0731ce9ed2b68fd24985eedb2249d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a265dbc914fc7a31780620e056962761f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac32ab6000faff924bd92bd7a00e076d2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2e1557e4d757ff419f73a1eae1f32bb6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4cff671ff3e2e347bf4221c17f8d40bb" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae2628a61a5c8e6c0138274e352c8b824" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4c939452484107b3b94e20326811fd6b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abd1e23f4f38059e22c88f6b52e9f86af" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a41a4d261bf7de06703aff186fdd9b330" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a679b0087811ea28b1133b92e36e9cac6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a51d22f911b8ad810971fdd465e3c30c6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2d0ded2c13b33a626e563dec8003f025" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac5f6c857231710b0609b6a71f019e86c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a80126683333437cd436b2b1d31500cde" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae97defb0d83a9874a539f122b19e9b1b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a61cd7cb670077801c4f1342eee9e1e55" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad5f43c2cfc9e2fb13bb5f0ffbf02cd71" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae162795ae4953b394877c90b59f8f0b4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae986766e9007001914d2ccf6c5e9deed" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaaf320f9e7fe1147915c63b2ca491e21" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d6457aaeab7a2ab8b175bfe63b04669" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaebb90cd0d75a46842884092bcf9ef91" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a28548adf26abccd7d5fd06670d27c174" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa37ef23994b86e3adf5343d9ce9ade08" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9cdd080ba007ce18b79a6ea061753ad8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a297a458de47d787441cc700c3e3c4a35" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aca65391b047c5e6ca20dab64a4ededa7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1affba6f6ee912fc2e9ff283ae0fee77ad" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5cb9598d51998a32d82a07bfafcaee45" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa0ac85ab39b21af44f0ff68a0231da77" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae48c75c56ab1197f4e0178b538cdffff" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9976635fdc012caf802116a6e8886e42" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a50c92a041394bf7dbc96ed4b1928e626" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5ac75dcf86ffb8d29e089d5eba8fcc81" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a52b7619e9cf0c713fc07d92a88cfcf68" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aca0283c838b237a2916b4e6e29560b8f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abe4c17a7ed8149c828bec2107a9283e9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad0a867c91cf7594662682975fad26f1a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a733bd6cd53e6b84f9e4b30f3b8b6a9c7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ccf91dc5c2a1c0b03d184f48568688f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a09f397cda3a99e69bd9390e774c5da0c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab29fb59bac3bcf65cd2f983803085f64" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3e6159b8df2f08d05d6502ff44f8ac1d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7f2b3103251d03e05a81e68e2504a40a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a930a1a87eddd2efba169cc2b16d86f47" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a56ee2f70c3fb465a5d6a16f2296900c8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8487a6b71fff3f009fa495d07551bdd0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a492a834337a0e416de134c069e899c01" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7dbb5b255c0f3bebb745f5458edf9d3c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7e3184927fdee6ee7b160a03625a96e1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa65e0ba5da9c64f11783b5ea682e8dba" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af3236d435397c78f15f8f81615a21707" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a49cf19a6515e99ff7fc2331d2b4a8edc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a14083120df1b7295b699656f29bee7ef" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac9cb19a65c4f75ba9f6c2173abdfb641" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a63feeca9f44d597d74f5fc65393e081f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa83ffdcdbcafafb6e20fd2d8c3e58e87" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a31c618ffa504066146c7210d03e2898c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ddba7f8242407d52b95679c162e0a09" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a22b015d163cdba2d8b2232eb08513ada" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab20e0ec59f3f739dfe3da296c603b3d1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae98b4bc587c6cd9d9287f4be03a752c5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae545ac1a36a40388e158d5685c0bde95" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adcb3dedde3761ebec81aa2a0bd65fb1e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a371fe87ee4f5e2bbf957c44ef96dd6a8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afd19008ed5bb7b9d6a84c0b3c768b4c8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7aac31f2a78f030b73ebafb878a842b1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa880202059c8e110ff3acc808684fe50" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2cac80bee58d71825090af077af385a3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2f5d0e675ae1168ae1e03e9d3b254f11" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af340333c8565b72e3f2daa1bf5449ac3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac47fb670d50351d22ec3940c6cd022ab" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af736166f2f7aab6e38d150ba0155c22d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae73a3d240e7a253897dd594dac4d0de8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af21eecbed90e1c124eb50e166f54dccb" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5019bfd5a9dd40924cc3738ceaa67822" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abb841de3fbc7f2fc921631488d4190bf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2b27b33ab8e67d63f687c4f45d791415" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afdd146436a54699ff312bbe2695fd8c0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a111c435b4ea5a8c6d95e927bae571ec9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8014fc62e046d866e358898edcbacf99" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa374dde63ba0c3a98ba87209949cdcac" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3583766aed92b736954d30f91f18e224" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afa060250e9e29289d5c9cdb74e0c0bb2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af58b943ef5e57484ef3eb900b8c15ca4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1892ffdfe4e73aa8bb1d564741b32c1d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0348dbc66f529d2817140043ad9b1969" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a33a4bb515adec08f6c53c955e8eaa78d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1bde4ed1ed2d1735980bf66827a35e10" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a89e7d4c664d68cef47e6cced6ecbeafa" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac1b044a40b9eb9e6432a95d789d85195" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af11b95ca26e9a8a271fde978a33e1407" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a20d3dcd0b0e8094b9ea858c730be079e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a998286449d0cbbc776d1ed87ea3f3ba0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afcc9a8631048b6af14a0348af0422b7b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a10a53a39c37b1228456751c0db3cb825" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab46f63781fed0fc2c81d022e69ec1824" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adec226a563ea9064a133ae2e7be3fd89" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5fa3e6b2aea8ec409aac5cbab60f1a33" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a45dbd813926394800c7cecb349286cfd" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a65736bec337ce10aeeabf6cac02bf211" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8e82c10cdcd1c4dc6adbb0e0fddd0da5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab78565e93fec7493ff3024cd7dd5b069" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaa68af6fd662373c27453c89b317da44" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abb646ef3924a294854f1344e3bad3579" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adbca5abca4c1f0c720734fb2e856da3e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abac5ff87c65552d63bc12d9ee063378b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aba858c32285c1ff631eb0af5c5a72881" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6f9a42fd46c784baa1571bce5867bc69" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab3f4d9ae17b5a05aa642bc994fd1ab00" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5005639b0b0f9325dff366cd6f84baca" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad7753220264fc241913ee265e6735124" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0b44579a9edfbf279bc86423253b8abf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a371194b185b1dc2c058dcd7b6232a6d5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a09618547f6c9fb50f63bb9a4168176f0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abf696eef6c0f2f07d891caf9fe9b5a5a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a00361fb838241024f98f704aeff33bce" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a73b45b80bf933ccc63992d762808e603" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab3a802f67824392a7f0833360336c539" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acff5a8657a1e4d64dcf6591c575df154" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa5e5c6dc9a94e56070fb62b2b38eaccd" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1e150fb52435bfbd7ec49bf2e7e0395d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a39421ae7285c380ed4e692b1f98c704e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a80efb5c2ca35489d818751dafaba39d6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afbee495d1390124cab86bb87b5eabc6a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad66e8b9a36affa7c282a214c22ea5caf" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1efccd005bfdcdd6017f9722024f861b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5e2f2be5e4e75770ed542b345b0407ca" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a437900a00f76c37419626c73ae3d3b5e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7b612c8490f594784481e194a0a53efa" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a84b2a9b5eb140d297673812c411214c6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a876ab7ba1fa30dcd633a9afd569e4ead" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8f131b014c2525edb1c847a3e0ce2394" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4c884517e4e84365ad57485aa929aae2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa2132c65aaa753b1a0473968e31f80f4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad47771bd40ccc5bcdcd7d21e5f8bd023" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aeff1b5f0ead06f40575822686d40cff5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aac26b143c92a8fd044ab961b870fa95b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af42ac87a0beba5e9b3987638932995f5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8c37493757c74495c20fc2bb1a625f16" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a04f1facdb53bf8292e92a8b4214c2f55" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ecdc6e8eb4c2e9ec87a1b1c7f864e2a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaef8ef7a3cef8e51a04c67e531a6e6c4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa7b911d51da61159e56103463d3e8254" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad4b7e001e19a716d3e4757dca0481876" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6982cf1a70c1a8b04b2e4b30d1adde95" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae942b59596e0959d66079fecbf93c72e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5d0422f6256aeefa3052c57acd21a301" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a37cb74733e2e93a145512d025918e854" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1cb9e05cf8d855b9084579132a441187" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a52bb9a80cd40c9fec4fb85bb7bf097d7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aabbcb29b630416f78fa8def3544fbdaa" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab6b2f5480c93aa0f4c7dbcd0ffdc2303" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a70c688230c229c2875ac09071cc8e47f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5509d605d5c27e21ad736a9ff44b67d0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a85ce9caac7aae2796e218105accbdd23" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a89f8fd7846e2701e0679b7fdfd620b14" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1affcf33cab46559c3083c2ce9882f7f5a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaf38a1d500dd0374f5412e3806f5eb9c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab7168f1c5bff696fa0e54266be33919c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad17a5b38b91cba7a28f313b5e05081d4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5fda7a845823fd5877139829462dffd0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac002a7aadd52b1f79b6e1bb79beed1c2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4981a4404adc813443a6e9130f42716a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a287aa1596c27b4d11931c171894a8939" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4adb8f67598a0fa1ab94604dbf62962a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab548951f9c14c2b419585e35ce0d9777" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a152bd0b020cbef21a223053c3b0d757a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1addc17ba6ddfeeefee04218cce4d9210b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1afcd2ffc6976ff9c5f209e5f7e78e1cdc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a726ace6c20fbe85021998b18aebfc990" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3b2c6c883fdb961cb603f6ac1a6914e8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aab433778b4570d0788601e9df5e1e536" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa97b01f950ae58b8d4815fb13f610ea6" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a9746eb5f1e7ec5051f5837347f56a331" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ace36a8b0d2d1aa1215866086eb7dcd20" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a43ed924e586528c3a0b38211992a8bfe" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae725895831268adf979ba96d691296a9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a493af1f45959cf5de330091483ecdce5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a509792a5bf8852272cacf588c294155a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8e3f3ff5e5b2ffb1359f640209e5bff5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0c784d7cec8efe22ab702a864e6a923b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a86f34f7c2f15b9d70518dd2dea705d0d" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8b26ce3afd8a40c6321258fa86fb71ae" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a687ad2c2c9566febf703a0e2ad6f3bd9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac6acabc3799cdde8f2dc2a5506ca43b3" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1acfc45957da54d867cfb769d67cb660bc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7a62a6dff1db2e76781b4368cccf2406" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ace7864f0449eb4b03d56799f1af7e836" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a67d7b5a58db4be5a32788c3304c7cd54" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adbc533367176f396d380a90e1a9723ec" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a382546ee33f8b02d0d4722f5e1bdf33e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6738449a41b54f7867af9beae4630347" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a6f490793ee1859504c097ffe73196e34" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad0e62caca0f85342890c3f3dd67ba464" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae828cc99c1218636e20d71647435c4cc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abd38b31bf9b85a9d1a6e87b0e6dc08f9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af1fbaab56631ba3a2c51e3b6c716db39" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5becbb9ffa134e109476b14566dfd855" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a39a3724be4fedaa6a70f9e13c5fef3cc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a861887dafc960dd59adcb1a68d70e3b8" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa40aa3ee87472d09141c6e8d5b30df57" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3c1edc137e6e1c16866873901ec41dea" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1af7f2ce4c7897511974f3690bb65039ff" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adcda4a60da170e1c087c9715900be097" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8f8240e29fdfbce5f3b11c5551d64531" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a78167f312b6625b7e3bc8e9bc460d819" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4ffb99b534535bd1d4a6114896601373" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad432f2ae2961e5e685363fb4cfddbb70" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a15bc14131b8bf2bc0d0b488523fd3e8b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa642c74db7853fe358613890f63757f1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a15fab42129a59ace9cf95fef20d938ef" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a726c7437b320c6a7b665e43c14d07698" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a010e731689a179e25c739bf07ef07627" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d96408e20aceb21895679ecad2c9f70" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a45c92e2a4d9697b4b5fb07004646c9d9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aae11c8c5906046acbaedd39a642248c7" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac86b67cdd403aca605f9f427a67dab76" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aafb83c406e0b17f9d5892a9ba8bcb550" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0a61bd0ca3bcf1924b30371df3b9b1a4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a62eee7a90fe3edd0d5e399fea3ba9eb2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a4e5cf03b8bd598da5e4cdc91cdbf8ff4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a56a5f31744c687458f00bf8d0497a988" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a145aabd27906a3c42758618a6e6c902a" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a34a5ea8f8618c907cd8add525001d8f4" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a885d035f51b3274ee64e604b7e29050f" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ad8a45f8d14d04bd66c5d5635e69d2aa2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ace3200f0011f124a58e0f6e6097fb5f1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aad1b8cf9b5b3de5c80a349e298cfdc5c" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1adb7276a464297056bf77505aed18ff81" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a917d9fad0b972d9b97ea520b2d76fb3e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ab31a307b1cbf1435e1636aae2b2ff3b1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d27194e69adce152b273c241ed031a2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a8ca90ad388017b4ac8f75399963526aa" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a29fb9caaa6e6a1c3a4dcb0bcca078c01" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac90909d508ded57aaca73a827a208450" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abcd4d852ffe613cae1d639b6d2a84912" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a53555f020055f0b18ec0d7db1aded8f1" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac4d4939d3267f12fc73f968d6485d725" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2e08eeb98cee31599bcff4b1a3b512c2" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a88ed79f98c2e5e2bb36d251b76dea3fc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae171a927a17bd30017358d835b243f03" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5a22b413290379d012b2ff63c7ec29be" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aaab366d5add80d110c252e7f467aca46" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3857d50a43be34610f630ae248981fba" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a875c7746932aed690e7a068e267f871b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abfa271128f3cdccf013789b0b110fefc" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a3e8b39da59214df38f7a57f9d7f23c55" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a419e9e46f6b24f76df3109ed537e252b" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a30f6ca6d80c095dc197e924280ce1360" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a29aafc48ee5ed49f0580233e17509f88" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa0cbb178ee8034a496eb25f1146e31b0" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1aa38cbfe1bf706c19c9fdc2aca38594ce" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a7bede5f6c23132dd9bc2949c67db45ef" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1d4902d74955b70e21bc59059b591b15" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a112c15056a291001b7943b675ff62e62" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5030e7dea60f6f6f5437df2727a3df16" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a5919aecf1305e135bd6e917265d8a9ab" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a2596351dd9979ad0e2000a0517e0bc3e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0e232438a55a5fd3281cb2ee97540d62" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a64a59768e09375d7de769b64be25572e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ac0c910b8bfc6e2ca977706ff424d9be9" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a763a47a9615aac6a79e5f00d5f8d7c03" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1abd23823e1f7540487319b9f4c199ed9e" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a0944630a63aa524c760cc780e62abb83" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1ae9c08225755f5bf54689e1b11ecb5cf5" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a1ced0bd88e189ac052b541811e1f1590" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>write</name></member>
      <member refid="classstadls_1_1vx_1_1detail_1_1_playback_program_builder_adapter_1a91803c39ff5ffaf50875f60fca2e6798" prot="public" virt="non-virtual"><scope>stadls::vx::detail::PlaybackProgramBuilderAdapter</scope><name>~PlaybackProgramBuilderAdapter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
