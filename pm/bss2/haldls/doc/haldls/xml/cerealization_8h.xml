<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="cerealization_8h" kind="file" language="C++">
    <compoundname>cerealization.h</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">cereal/archives/binary.hpp</includes>
    <includes local="no">cereal/archives/json.hpp</includes>
    <includes local="no">cereal/archives/portable_binary.hpp</includes>
    <includes local="no">cereal/archives/xml.hpp</includes>
    <includes local="no">cereal/cereal.hpp</includes>
    <includes local="yes">hate/type_list.h</includes>
    <includes local="yes">hate/visibility.h</includes>
    <includedby refid="pyhaldls_8h" local="yes">/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/pyhaldls.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="0">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/cerealization.h</label>
        <link refid="cerealization_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="3">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="1">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>hate/visibility.h</label>
      </node>
      <node id="6">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="4">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="7">
        <label>hate/type_list.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/vx/pyhaldls.h</label>
        <link refid="pyhaldls_8h"/>
      </node>
      <node id="9">
        <label>/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/cerealization.h</label>
        <link refid="cerealization_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacehaldls">haldls</innernamespace>
    <innernamespace refid="namespacehaldls_1_1vx">haldls::vx</innernamespace>
    <innernamespace refid="namespacehaldls_1_1vx_1_1detail">haldls::vx::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="cerealization_8h_1aaa894c4848e7c1ca32902a036da650bd" prot="public" static="no">
        <name>EXPLICIT_INSTANTIATE_CEREAL_SERIALIZE</name>
        <param><defname>CLASS_NAME</defname></param>
        <initializer>template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::BinaryOutputArchive&amp;, std::uint32_t const);                                        \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::BinaryInputArchive&amp;, std::uint32_t const);                                         \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::JSONOutputArchive&amp;, std::uint32_t const);                                          \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::JSONInputArchive&amp;, std::uint32_t const);                                           \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::PortableBinaryOutputArchive&amp;, std::uint32_t const);                                \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::PortableBinaryInputArchive&amp;, std::uint32_t const);                                 \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::XMLOutputArchive&amp;, std::uint32_t const);                                           \
	template SYMBOL_VISIBLE void CLASS_NAME ::serialize(                                           \
	    cereal::XMLInputArchive&amp;, std::uint32_t const);                                            \
	template SYMBOL_VISIBLE std::string <ref refid="namespacehaldls_1_1vx_1aa8fd28eec9e6128d911ee3673b62f567" kindref="member">haldls::vx::to_json</ref>(CLASS_NAME const&amp;);                    \
	template SYMBOL_VISIBLE std::string <ref refid="namespacehaldls_1_1vx_1a952419dc1161c6c0094aa053f3683ba6" kindref="member">haldls::vx::to_binary</ref>(CLASS_NAME const&amp;);                  \
	template SYMBOL_VISIBLE std::string <ref refid="namespacehaldls_1_1vx_1a3304a07966620575d750245390d7a3c1" kindref="member">haldls::vx::to_portablebinary</ref>(CLASS_NAME const&amp;);          \
	template SYMBOL_VISIBLE std::string <ref refid="namespacehaldls_1_1vx_1a3801084611352a8aa35c95a5d4a9dc9b" kindref="member">haldls::vx::to_xml</ref>(CLASS_NAME const&amp;);                     \
	template SYMBOL_VISIBLE void <ref refid="namespacehaldls_1_1vx_1a9aabaead35c366a93aaf9164de5c1038" kindref="member">haldls::vx::from_json</ref>(CLASS_NAME&amp;, std::string const&amp;);           \
	template SYMBOL_VISIBLE void <ref refid="namespacehaldls_1_1vx_1a6dd9de81f5e339bb57081a24e537d751" kindref="member">haldls::vx::from_binary</ref>(CLASS_NAME&amp;, std::string const&amp;);         \
	template SYMBOL_VISIBLE void <ref refid="namespacehaldls_1_1vx_1a7f1ce5ee8c90f0bf401964a6ab1ba151" kindref="member">haldls::vx::from_portablebinary</ref>(CLASS_NAME&amp;, std::string const&amp;); \
	template SYMBOL_VISIBLE void <ref refid="namespacehaldls_1_1vx_1a03cf72196d1772877e75a4684a242a49" kindref="member">haldls::vx::from_xml</ref>(CLASS_NAME&amp;, std::string const&amp;);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/cerealization.h" line="130" column="9" bodyfile="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/cerealization.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/jenkins/jenlib_workspaces_f9/bld_nightly-haldls.YmxkX25pZ2h0bHktaGFsZGxzIzY1NQ.x/haldls/include/haldls/cerealization.h"/>
  </compounddef>
</doxygen>
